package me.prism3.logger.utils.enums;

import org.bukkit.Bukkit;
import org.bukkit.Color;
import org.bukkit.Material;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.EnchantmentStorageMeta;
import org.bukkit.inventory.meta.LeatherArmorMeta;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.potion.Potion;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.potion.PotionType;

import java.util.*;

interface Versionable {
    String VERSION = Bukkit.getVersion();
    boolean EIGHT = VERSION.contains("1.8");
    boolean NINE = VERSION.contains("1.9");
    boolean TEN = VERSION.contains("1.10");
    boolean ELEVEN = VERSION.contains("1.11");
    boolean TWELVE = VERSION.contains("1.12");
}

public enum UMaterial implements Versionable {

    ACACIA_BOAT("BOAT", "BOAT_ACACIA"),
    ACACIA_BUTTON("WOOD_BUTTON"),
    ACACIA_DOOR("ACACIA_DOOR_ITEM"),
    ACACIA_FENCE,
    ACACIA_FENCE_GATE,
    ACACIA_LEAVES("LEAVES_2"),
    ACACIA_LOG(0, "LOG_2"),
    ACACIA_PLANKS(4, "WOOD"),
    ACACIA_PRESSURE_PLATE("WOOD_PLATE"),
    ACACIA_SAPLING(4, "SAPLING"),
    ACACIA_SIGN("SIGN"),
    ACACIA_SLAB(4, "WOOD_STEP"),
    ACACIA_STAIRS,
    ACACIA_TRAPDOOR("TRAP_DOOR"),
    ACACIA_WALL_SIGN("WALL_SIGN"),
    ACACIA_WOOD(12, "LOG_2"),
    ACTIVATOR_RAIL,
    AIR,
    ALLIUM(2, "RED_ROSE"),
    AMETHYST_BLOCK,
    AMETHYST_CLUSTER,
    AMETHYST_SHARD,
    ANCIENT_DEBRIS,
    ANDESITE(5, "STONE"),
    ANDESITE_SLAB,
    ANDESITE_STAIRS,
    ANVIL,
    APPLE,
    ARMOR_STAND,
    ARROW,
    ATTACHED_MELON_STEM,
    ATTACHED_PUMPKIN_STEM,
    AXOLOTL_BUCKET,
    AXOLOTL_SPAWN_EGG,
    AZALEA,
    AZALEA_LEAVES,
    AZURE_BLUET(3, "RED_ROSE"),
    BAKED_POTATO,
    BAMBOO,
    BAMBOO_SAPLING,
    BARREL,
    BARRIER,
    BASALT,
    BAT_SPAWN_EGG(65, "MONSTER_EGG"),
    BEACON,
    BEDROCK,
    BEE_NEST,
    BEE_SPAWN_EGG,
    BEEF("RAW_BEEF"),
    BEEHIVE,
    BEETROOT,
    BEETROOT_SEEDS,
    BEETROOT_SOUP,
    BEETROOTS,
    BELL,
    BIG_DRIPLEAF,
    BIG_DRIPLEAF_STEM,
    BIRCH_BOAT("BOAT", "BOAT_BIRCH"),
    BIRCH_BUTTON("WOOD_BUTTON"),
    BIRCH_DOOR("BIRCH_DOOR_ITEM"),
    BIRCH_FENCE,
    BIRCH_FENCE_GATE,
    BIRCH_LEAVES(2, "LEAVES"),
    BIRCH_LOG(2, "LOG"),
    BIRCH_PLANKS(2, "WOOD"),
    BIRCH_PRESSURE_PLATE("WOOD_PLATE"),
    BIRCH_SAPLING(2, "SAPLING"),
    BIRCH_SIGN("SIGN"),
    BIRCH_SLAB(2, "WOOD_STEP"),
    BIRCH_STAIRS("BIRCH_WOOD_STAIRS"),
    BIRCH_TRAPDOOR("TRAP_DOOR"),
    BIRCH_WALL_SIGN("WALL_SIGN"),
    BIRCH_WOOD(14, "LOG"),
    BLACK_BANNER("BANNER"),
    BLACK_BED(15, "BED"),
    BLACK_CANDLE,
    BLACK_CANDLE_CAKE,
    BLACK_CARPET(15, "CARPET"),
    BLACK_CONCRETE(15, "CONCRETE"),
    BLACK_CONCRETE_POWDER(15, "CONCRETE_POWDER"),
    BLACK_DYE,
    BLACK_GLAZED_TERRACOTTA,
    BLACK_LEATHER_BOOTS("LEATHER_BOOTS", 15, Color.fromRGB(25, 25, 25)),
    BLACK_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 15, Color.fromRGB(25, 25, 25)),
    BLACK_LEATHER_HELMET("LEATHER_HELMET", 15, Color.fromRGB(25, 25, 25)),
    BLACK_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 15, Color.fromRGB(25, 25, 25)),
    BLACK_SHULKER_BOX,
    BLACK_STAINED_GLASS(15, "STAINED_GLASS"),
    BLACK_STAINED_GLASS_PANE(15, "STAINED_GLASS_PANE"),
    BLACK_TERRACOTTA(15, "STAINED_CLAY"),
    BLACK_WOOL(15, "WOOL"),
    BLACKSTONE,
    BLACKSTONE_SLAB,
    BLACKSTONE_STAIRS,
    BLACKSTONE_WALL,
    BLAST_FURNACE,
    BLAZE_POWDER,
    BLAZE_ROD,
    BLAZE_SPAWN_EGG(61, "MONSTER_EGG"),
    BLUE_BANNER(4, "BANNER"),
    BLUE_BED(11, "BED"),
    BLUE_CANDLE,
    BLUE_CANDLE_CAKE,
    BLUE_CARPET(11, "CARPET"),
    BLUE_CONCRETE(11, "CONCRETE"),
    BLUE_CONCRETE_POWDER(11, "CONCRETE_POWDER"),
    BLUE_DYE,
    BLUE_GLAZED_TERRACOTTA,
    BLUE_LEATHER_BOOTS("LEATHER_BOOTS", 11, Color.fromRGB(51, 76, 178)),
    BLUE_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 11, Color.fromRGB(51, 76, 178)),
    BLUE_LEATHER_HELMET("LEATHER_HELMET", 11, Color.fromRGB(51, 76, 178)),
    BLUE_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 11, Color.fromRGB(51, 76, 178)),
    BLUE_ICE,
    BLUE_ORCHID(1, "RED_ROSE"),
    BLUE_SHULKER_BOX,
    BLUE_STAINED_GLASS(11, "STAINED_GLASS"),
    BLUE_STAINED_GLASS_PANE(11, "STAINED_GLASS_PANE"),
    BLUE_TERRACOTTA(11, "STAINED_CLAY"),
    BLUE_WALL_BANNER(4, "BANNER"),
    BLUE_WOOL(11, "WOOL"),
    BONE,
    BONE_BLOCK,
    BONE_MEAL(15, "INK_SACK"),
    BOOK,
    BOOKSHELF,
    BOW,
    BOWL,
    BRAIN_CORAL,
    BRAIN_CORAL_BLOCK,
    BRAIN_CORAL_FAN,
    BRAIN_CORAL_WALL_FAN,
    BREAD,
    BREWING_STAND,
    BREWING_STAND_ITEM("BREWING_STAND"),
    BRICK("CLAY_BRICK"),
    BRICK_SLAB(4, "STEP"),
    BRICK_STAIRS,
    BRICK_WALL,
    BRICKS("BRICK_BLOCK"),
    BROWN_BANNER(3, "BANNER"),
    BROWN_BED(12, "BED"),
    BROWN_CANDLE,
    BROWN_CANDLE_CAKE,
    BROWN_CARPET(12, "CARPET"),
    BROWN_CONCRETE(12, "CONCRETE"),
    BROWN_CONCRETE_POWDER(12, "CONCRETE_POWDER"),
    BROWN_GLAZED_TERRACOTTA,
    BROWN_LEATHER_BOOTS("LEATHER_BOOTS", 12, Color.fromRGB(102, 76, 51)),
    BROWN_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 12, Color.fromRGB(102, 76, 51)),
    BROWN_LEATHER_HELMET("LEATHER_HELMET", 12, Color.fromRGB(102, 76, 51)),
    BROWN_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 12, Color.fromRGB(102, 76, 51)),
    BROWN_MUSHROOM,
    BROWN_MUSHROOM_BLOCK("HUGE_MUSHROOM_1"),
    BROWN_SHULKER_BOX,
    BROWN_STAINED_GLASS(12, "STAINED_GLASS"),
    BROWN_STAINED_GLASS_PANE(12, "STAINED_GLASS_PANE"),
    BROWN_TERRACOTTA(12, "STAINED_CLAY"),
    BROWN_WALL_BANNER(3, "BANNER"),
    BROWN_WOOL(12, "WOOL"),
    BUBBLE_COLUMN,
    BUBBLE_CORAL,
    BUBBLE_CORAL_BLOCK,
    BUBBLE_CORAL_FAN,
    BUBBLE_CORAL_WALL_FAN,
    BUCKET,
    BUDDING_AMETHYST,
    BUNDLE,
    BURNING_FURNACE("LEGACY_BURNING_FURNACE"),
    CACTUS,
    CAKE,
    CAKE_BLOCK("CAKE"),
    CALCITE,
    CAMPFIRE,
    CANDLE,
    CANDLE_CAKE,
    CARROT,
    CARROT_ITEM("CARROT"),
    CARROT_ON_A_STICK("CARROT_STICK"),
    CARTOGRAPHY_TABLE,
    CARVED_PUMPKIN("PUMPKIN"),
    CAT_SPAWN_EGG,
    CAULDRON,
    CAULDRON_ITEM("CAULDRON"),
    CAVE_AIR("AIR"),
    CAVE_SPIDER_SPAWN_EGG(59, "MONSTER_EGG"),
    CAVE_VINES,
    CAVE_VINES_PLANT,
    CHAIN,
    CHAIN_COMMAND_BLOCK("COMMAND", "COMMAND_CHAIN"),
    CHAINMAIL_BOOTS,
    CHAINMAIL_CHESTPLATE,
    CHAINMAIL_HELMET,
    CHAINMAIL_LEGGINGS,
    CHARCOAL(1, "COAL"),
    CHEST,
    CHEST_MINECART("STORAGE_MINECART"),
    CHICKEN("RAW_CHICKEN"),
    CHICKEN_SPAWN_EGG(93, "MONSTER_EGG"),
    CHIPPED_ANVIL(1, "ANVIL"),
    CHISELED_DEEPSLATE,
    CHISELED_NETHER_BRICKS,
    CHISELED_POLISHED_BLACKSTONE,
    CHISELED_QUARTZ_BLOCK(1, "QUARTZ_BLOCK"),
    CHISELED_RED_SANDSTONE(1, "RED_SANDSTONE"),
    CHISELED_SANDSTONE(1, "SANDSTONE"),
    CHISELED_STONE_BRICKS(3, "SMOOTH_BRICK"),
    CHORUS_FLOWER,
    CHORUS_FRUIT,
    CHORUS_PLANT,
    CLAY,
    CLAY_BALL,
    CLOCK("WATCH"),
    COAL,
    COAL_BLOCK,
    COAL_ORE,
    COARSE_DIRT(1, "DIRT"),
    COBBLED_DEEPSLATE,
    COBBLED_DEEPSLATE_SLAB,
    COBBLED_DEEPSLATE_STAIRS,
    COBBLED_DEEPSLATE_WALL,
    COBBLESTONE,
    COBBLESTONE_SLAB(3, "STEP"),
    COBBLESTONE_STAIRS,
    COBBLESTONE_WALL("COBBLE_WALL"),
    COBWEB("WEB"),
    COCOA,
    COCOA_BEANS(3, "INK_SACK"),
    COD(2, "RAW_FISH"),
    COD_BUCKET,
    COD_SPAWN_EGG,
    COMMAND_BLOCK("COMMAND"),
    COMMAND_BLOCK_MINECART("COMMAND_MINECART"),
    COMPARATOR("REDSTONE_COMPARATOR"),
    COMPASS,
    COMPOSTER,
    CONDUIT,
    COOKED_BEEF,
    COOKED_CHICKEN,
    COOKED_COD("COOKED_FISH"),
    COOKED_MUTTON,
    COOKED_PORKCHOP("GRILLED_PORK"),
    COOKED_RABBIT,
    COOKED_SALMON(1, "COOKED_FISH"),
    COOKIE,
    COPPER_BLOCK,
    COPPER_INGOT,
    COPPER_ORE,
    CORNFLOWER,
    COW_SPAWN_EGG(92, "MONSTER_EGG"),
    CRACKED_DEEPSLATE_BRICKS,
    CRACKED_DEEPSLATE_TILES,
    CRACKED_NETHER_BRICKS,
    CRACKED_POLISHED_BLACKSTONE_BRICKS,
    CRACKED_STONE_BRICKS(2, "SMOOTH_BRICK"),
    CRAFTING_TABLE("WORKBENCH"),
    CREEPER_BANNER_PATTERN,
    CREEPER_HEAD(4, "SKULL_ITEM"),
    CREEPER_SPAWN_EGG(50, "MONSTER_EGG"),
    CREEPER_WALL_HEAD(3, "SKULL"),
    CRIMSON_BUTTON,
    CRIMSON_DOOR,
    CRIMSON_FENCE,
    CRIMSON_FENCE_GATE,
    CRIMSON_FUNGUS,
    CRIMSON_HYPHAE,
    CRIMSON_NYLIUM,
    CRIMSON_PLANKS,
    CRIMSON_PRESSURE_PLATE,
    CRIMSON_ROOTS,
    CRIMSON_SIGN,
    CRIMSON_SLAB,
    CRIMSON_STAIRS,
    CRIMSON_STEM,
    CRIMSON_TRAPDOOR,
    CRIMSON_WALL_SIGN,
    CROSSBOW,
    CRYING_OBSIDIAN,
    CUT_COPPER,
    CUT_COPPER_SLAB,
    CUT_COPPER_STAIRS,
    CUT_RED_SANDSTONE(2, "RED_SANDSTONE"),
    CUR_RED_SANDSTONE_SLAB,
    CUT_SANDSTONE(2, "SANDSTONE"),
    CUT_SANDSTONE_SLAB,
    CYAN_BANNER(6, "BANNER"),
    CYAN_BED(9, "BED"),
    CYAN_CANDLE,
    CYAN_CANDLE_CAKE,
    CYAN_CARPET(9, "CARPET"),
    CYAN_CONCRETE(9, "CONCRETE"),
    CYAN_CONCRETE_POWDER(9, "CONCRETE_POWDER"),
    CYAN_DYE(6, "INK_SACK"),
    CYAN_GLAZED_TERRACOTTA,
    CYAN_LEATHER_BOOTS("LEATHER_BOOTS", 9, Color.fromRGB(76, 127, 153)),
    CYAN_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 9, Color.fromRGB(76, 127, 153)),
    CYAN_LEATHER_HELMET("LEATHER_HELMET", 9, Color.fromRGB(76, 127, 153)),
    CYAN_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 9, Color.fromRGB(76, 127, 153)),
    CYAN_SHULKER_BOX,
    CYAN_STAINED_GLASS(9, "STAINED_GLASS"),
    CYAN_STAINED_GLASS_PANE(9, "STAINED_GLASS_PANE"),
    CYAN_TERRACOTTA(9, "STAINED_CLAY"),
    CYAN_WALL_BANNER(6, "BANNER"),
    CYAN_WOOL(9, "WOOL"),
    DAMAGED_ANVIL(2, "ANVIL"),
    DANDELION("YELLOW_FLOWER"),
    DARK_OAK_BOAT("BOAT", "BOAT_DARK_OAK"),
    DARK_OAK_BUTTON("WOOD_BUTTON"),
    DARK_OAK_DOOR,
    DARK_OAK_DOOR_ITEM("DARK_OAK_DOOR"),
    DARK_OAK_FENCE,
    DARK_OAK_FENCE_GATE,
    DARK_OAK_LEAVES(1, "LEAVES_2"),
    DARK_OAK_LOG(1, "LOG_2"),
    DARK_OAK_PLANKS(5, "WOOD"),
    DARK_OAK_PRESSURE_PLATE("WOOD_PLATE"),
    DARK_OAK_SAPLING(5, "SAPLING"),
    DARK_OAK_SIGN("SIGN"),
    DARK_OAK_SLAB(5, "WOOD_STEP"),
    DARK_OAK_STAIRS,
    DARK_OAK_TRAPDOOR("TRAP_DOOR"),
    DARK_OAK_WALL_SIGN("WALL_SIGN"),
    DARK_OAK_WOOD(13, "LOG_2"),
    DARK_PRISMARINE(2, "PRISMARINE"),
    DARK_PRISMARINE_SLAB,
    DARK_PRISMARINE_STAIRS,
    DAYLIGHT_DETECTOR,
    DEAD_BRAIN_CORAL,
    DEAD_BRAIN_CORAL_BLOCK,
    DEAD_BRAIN_CORAL_FAN,
    DEAD_BRAIN_CORAL_WALL_FAN,
    DEAD_BUBBLE_CORAL,
    DEAD_BUBBLE_CORAL_BLOCK,
    DEAD_BUBBLE_CORAL_FAN,
    DEAD_BUBBLE_CORAL_WALL_FAN,
    DEAD_BUSH,
    DEAD_FIRE_CORAL,
    DEAD_FIRE_CORAL_BLOCK,
    DEAD_FIRE_CORAL_FAN,
    DEAD_FIRE_CORAL_WALL_FAN,
    DEAD_HORN_CORAL,
    DEAD_HORN_CORAL_BLOCK,
    DEAD_HORN_CORAL_FAN,
    DEAD_HORN_CORAL_WALL_FAN,
    DEAD_TUBE_CORAL,
    DEAD_TUBE_CORAL_BLOCK,
    DEAD_TUBE_CORAL_FAN,
    DEAD_TUBE_CORAL_WALL_FAN,
    DEBUG_STICK,
    DEEPSLATE,
    DEEPSLATE_BRICK_SLAB,
    DEEPSLATE_BRICK_STAIRS,
    DEEPSLATE_BRICK_WALL,
    DEEPSLATE_BRICKS,
    DEEPSLATE_COAL_ORE,
    DEEPSLATE_COPPER_ORE,
    DEEPSLATE_DIAMOND_ORE,
    DEEPSLATE_EMERALD_ORE,
    DEEPSLATE_GOLD_ORE,
    DEEPSLATE_IRON_ORE,
    DEEPSLATE_LAPIS_ORE,
    DEEPSLATE_REDSTONE_ORE,
    DEEPSLATE_TILE_SLAB,
    DEEPSLATE_TILE_STAIRS,
    DEEPSLATE_TILE_WALL,
    DEEPSLATE_TILES,
    DETECTOR_RAIL,
    DIAMOND,
    DIAMOND_AXE,
    DIAMOND_BLOCK,
    DIAMOND_BOOTS,
    DIAMOND_CHESTPLATE,
    DIAMOND_HELMET,
    DIAMOND_HOE,
    DIAMOND_HORSE_ARMOR("DIAMOND_BARDING"),
    DIAMOND_LEGGINGS,
    DIAMOND_ORE,
    DIAMOND_PICKAXE,
    DIAMOND_SHOVEL("DIAMOND_SPADE"),
    DIAMOND_SWORD,
    DIORITE(3, "STONE"),
    DIORITE_SLAB,
    DIORITE_STAIRS,
    DIORITE_WALL,
    DIRT,
    DISPENSER,
    DOLPHIN_SPAWN_EGG,
    DONKEY_SPAWN_EGG(31, "MONSTER_EGG"),
    DRAGON_BREATH("DRAGONS_BREATH"),
    DRAGON_EGG,
    DRAGON_HEAD(5, "SKULL"),
    DRAGON_HEAD_ITEM(5, "SKULL_ITEM", "DRAGON_HEAD"),
    DRAGON_WALL_HEAD(5, "SKULL"),
    DRIED_KELP,
    DRIED_KELP_BLOCK,
    DRIPSTONE_BLOCK,
    DROPPER,
    DROWNED_SPAWN_EGG,
    EGG,
    ELDER_GUARDIAN_SPAWN_EGG,
    ELYTRA,
    EMERALD,
    EMERALD_BLOCK,
    EMERALD_ORE,
    ENCHANTED_BOOK,
    ENCHANTED_BOOK_AQUA_AFFINITY("ENCHANTED_BOOK", Enchantment.WATER_WORKER, 1),
    ENCHANTED_BOOK_BANE_OF_ARTHROPODS_1("ENCHANTED_BOOK", Enchantment.DAMAGE_ARTHROPODS, 1),
    ENCHANTED_BOOK_BANE_OF_ARTHROPODS_2("ENCHANTED_BOOK", Enchantment.DAMAGE_ARTHROPODS, 2),
    ENCHANTED_BOOK_BANE_OF_ARTHROPODS_3("ENCHANTED_BOOK", Enchantment.DAMAGE_ARTHROPODS, 3),
    ENCHANTED_BOOK_BANE_OF_ARTHROPODS_4("ENCHANTED_BOOK", Enchantment.DAMAGE_ARTHROPODS, 4),
    ENCHANTED_BOOK_BANE_OF_ARTHROPODS_5("ENCHANTED_BOOK", Enchantment.DAMAGE_ARTHROPODS, 5),
    ENCHANTED_BOOK_BLAST_PROTECTION_1("ENCHANTED_BOOK", Enchantment.PROTECTION_EXPLOSIONS, 1),
    ENCHANTED_BOOK_BLAST_PROTECTION_2("ENCHANTED_BOOK", Enchantment.PROTECTION_EXPLOSIONS, 2),
    ENCHANTED_BOOK_BLAST_PROTECTION_3("ENCHANTED_BOOK", Enchantment.PROTECTION_EXPLOSIONS, 3),
    ENCHANTED_BOOK_BLAST_PROTECTION_4("ENCHANTED_BOOK", Enchantment.PROTECTION_EXPLOSIONS, 4),
    ENCHANTED_BOOK_CHANNELING("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("CHANNELING") != null ? "CHANNELING" : "PROTECTION_EXPLOSIONS"), 1),
    ENCHANTED_BOOK_CURSE_OF_BINDING("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("BINDING_CURSE") != null ? "BINDING_CURSE" : "PROTECTION_EXPLOSIONS"), 1),
    ENCHANTED_BOOK_CURSE_OF_VANISHING("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("VANISHING_CURSE") != null ? "VANISHING_CURSE" : "PROTECTION_EXPLOSIONS"), 1),
    ENCHANTED_BOOK_DEPTH_STRIDER_1("ENCHANTED_BOOK", Enchantment.DEPTH_STRIDER, 1),
    ENCHANTED_BOOK_DEPTH_STRIDER_2("ENCHANTED_BOOK", Enchantment.DEPTH_STRIDER, 2),
    ENCHANTED_BOOK_DEPTH_STRIDER_3("ENCHANTED_BOOK", Enchantment.DEPTH_STRIDER, 3),
    ENCHANTED_BOOK_EFFICIENCY_1("ENCHANTED_BOOK", Enchantment.DIG_SPEED, 1),
    ENCHANTED_BOOK_EFFICIENCY_2("ENCHANTED_BOOK", Enchantment.DIG_SPEED, 2),
    ENCHANTED_BOOK_EFFICIENCY_3("ENCHANTED_BOOK", Enchantment.DIG_SPEED, 3),
    ENCHANTED_BOOK_EFFICIENCY_4("ENCHANTED_BOOK", Enchantment.DIG_SPEED, 4),
    ENCHANTED_BOOK_EFFICIENCY_5("ENCHANTED_BOOK", Enchantment.DIG_SPEED, 5),
    ENCHANTED_BOOK_FEATHER_FALLING_1("ENCHANTED_BOOK", Enchantment.PROTECTION_FALL, 1),
    ENCHANTED_BOOK_FEATHER_FALLING_2("ENCHANTED_BOOK", Enchantment.PROTECTION_FALL, 2),
    ENCHANTED_BOOK_FEATHER_FALLING_3("ENCHANTED_BOOK", Enchantment.PROTECTION_FALL, 3),
    ENCHANTED_BOOK_FEATHER_FALLING_4("ENCHANTED_BOOK", Enchantment.PROTECTION_FALL, 4),
    ENCHANTED_BOOK_FIRE_ASPECT_1("ENCHANTED_BOOK", Enchantment.FIRE_ASPECT, 1),
    ENCHANTED_BOOK_FIRE_ASPECT_2("ENCHANTED_BOOK", Enchantment.FIRE_ASPECT, 2),
    ENCHANTED_BOOK_FIRE_PROTECTION_1("ENCHANTED_BOOK", Enchantment.PROTECTION_FIRE, 1),
    ENCHANTED_BOOK_FIRE_PROTECTION_2("ENCHANTED_BOOK", Enchantment.PROTECTION_FIRE, 2),
    ENCHANTED_BOOK_FIRE_PROTECTION_3("ENCHANTED_BOOK", Enchantment.PROTECTION_FIRE, 3),
    ENCHANTED_BOOK_FIRE_PROTECTION_4("ENCHANTED_BOOK", Enchantment.PROTECTION_FIRE, 4),
    ENCHANTED_BOOK_FLAME("ENCHANTED_BOOK", Enchantment.ARROW_FIRE, 1),
    ENCHANTED_BOOK_FORTUNE_1("ENCHANTED_BOOK", Enchantment.LOOT_BONUS_BLOCKS, 1),
    ENCHANTED_BOOK_FORTUNE_2("ENCHANTED_BOOK", Enchantment.LOOT_BONUS_BLOCKS, 2),
    ENCHANTED_BOOK_FORTUNE_3("ENCHANTED_BOOK", Enchantment.LOOT_BONUS_BLOCKS, 3),
    ENCHANTED_BOOK_FROST_WALKER_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("FROST_WALKER") != null ? "FROST_WALKER" : "LOOT_BONUS_BLOCKS"), 1),
    ENCHANTED_BOOK_FROST_WALKER_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("FROST_WALKER") != null ? "FROST_WALKER" : "LOOT_BONUS_BLOCKS"), 2),
    ENCHANTED_BOOK_IMPALING_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("IMPALING") != null ? "IMPALING" : "LOOT_BONUS_BLOCKS"), 1),
    ENCHANTED_BOOK_IMPALING_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("IMPALING") != null ? "IMPALING" : "LOOT_BONUS_BLOCKS"), 2),
    ENCHANTED_BOOK_IMPALING_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("IMPALING") != null ? "IMPALING" : "LOOT_BONUS_BLOCKS"), 3),
    ENCHANTED_BOOK_IMPALING_4("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("IMPALING") != null ? "IMPALING" : "LOOT_BONUS_BLOCKS"), 4),
    ENCHANTED_BOOK_IMPALING_5("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("IMPALING") != null ? "IMPALING" : "LOOT_BONUS_BLOCKS"), 5),
    ENCHANTED_BOOK_INFINITY("ENCHANTED_BOOK", Enchantment.ARROW_INFINITE, 1),
    ENCHANTED_BOOK_KNOCKBACK_1("ENCHANTED_BOOK", Enchantment.KNOCKBACK, 1),
    ENCHANTED_BOOK_KNOCKBACK_2("ENCHANTED_BOOK", Enchantment.KNOCKBACK, 2),
    ENCHANTED_BOOK_LOOTING_1("ENCHANTED_BOOK", Enchantment.LOOT_BONUS_MOBS, 1),
    ENCHANTED_BOOK_LOOTING_2("ENCHANTED_BOOK", Enchantment.LOOT_BONUS_MOBS, 2),
    ENCHANTED_BOOK_LOOTING_3("ENCHANTED_BOOK", Enchantment.LOOT_BONUS_MOBS, 3),
    ENCHANTED_BOOK_LOYALTY_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("LOYALTY") != null ? "LOYALTY" : "LOOT_BONUS_MOBS"), 1),
    ENCHANTED_BOOK_LOYALTY_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("LOYALTY") != null ? "LOYALTY" : "LOOT_BONUS_MOBS"), 2),
    ENCHANTED_BOOK_LOYALTY_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("LOYALTY") != null ? "LOYALTY" : "LOOT_BONUS_MOBS"), 3),
    ENCHANTED_BOOK_LUCK_OF_THE_SEA_1("ENCHANTED_BOOK", Enchantment.LUCK, 1),
    ENCHANTED_BOOK_LUCK_OF_THE_SEA_2("ENCHANTED_BOOK", Enchantment.LUCK, 2),
    ENCHANTED_BOOK_LUCK_OF_THE_SEA_3("ENCHANTED_BOOK", Enchantment.LUCK, 3),
    ENCHANTED_BOOK_LURE_1("ENCHANTED_BOOK", Enchantment.LURE, 1),
    ENCHANTED_BOOK_LURE_2("ENCHANTED_BOOK", Enchantment.LURE, 2),
    ENCHANTED_BOOK_LURE_3("ENCHANTED_BOOK", Enchantment.LURE, 3),
    ENCHANTED_BOOK_MENDING("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("MENDING") != null ? "MENDING" : "LURE"), 1),
    ENCHANTED_BOOK_MULTI_SHOT("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("MULTI_SHOT") != null ? "MULTI_SHOT" : "LURE"), 1),
    ENCHANTED_BOOK_PIERCING_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("PIERCING") != null ? "PIERCING" : "LURE"), 1),
    ENCHANTED_BOOK_PIERCING_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("PIERCING") != null ? "PIERCING" : "LURE"), 2),
    ENCHANTED_BOOK_PIERCING_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("PIERCING") != null ? "PIERCING" : "LURE"), 3),
    ENCHANTED_BOOK_PIERCING_4("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("PIERCING") != null ? "PIERCING" : "LURE"), 4),
    ENCHANTED_BOOK_POWER_1("ENCHANTED_BOOK", Enchantment.ARROW_DAMAGE, 1),
    ENCHANTED_BOOK_POWER_2("ENCHANTED_BOOK", Enchantment.ARROW_DAMAGE, 2),
    ENCHANTED_BOOK_POWER_3("ENCHANTED_BOOK", Enchantment.ARROW_DAMAGE, 3),
    ENCHANTED_BOOK_POWER_4("ENCHANTED_BOOK", Enchantment.ARROW_DAMAGE, 4),
    ENCHANTED_BOOK_POWER_5("ENCHANTED_BOOK", Enchantment.ARROW_DAMAGE, 5),
    ENCHANTED_BOOK_PROJECTILE_PROTECTION_1("ENCHANTED_BOOK", Enchantment.PROTECTION_PROJECTILE, 1),
    ENCHANTED_BOOK_PROJECTILE_PROTECTION_2("ENCHANTED_BOOK", Enchantment.PROTECTION_PROJECTILE, 2),
    ENCHANTED_BOOK_PROJECTILE_PROTECTION_3("ENCHANTED_BOOK", Enchantment.PROTECTION_PROJECTILE, 3),
    ENCHANTED_BOOK_PROJECTILE_PROTECTION_4("ENCHANTED_BOOK", Enchantment.PROTECTION_PROJECTILE, 4),
    ENCHANTED_BOOK_PROTECTION_1("ENCHANTED_BOOK", Enchantment.PROTECTION_ENVIRONMENTAL, 1),
    ENCHANTED_BOOK_PROTECTION_2("ENCHANTED_BOOK", Enchantment.PROTECTION_ENVIRONMENTAL, 2),
    ENCHANTED_BOOK_PROTECTION_3("ENCHANTED_BOOK", Enchantment.PROTECTION_ENVIRONMENTAL, 3),
    ENCHANTED_BOOK_PROTECTION_4("ENCHANTED_BOOK", Enchantment.PROTECTION_ENVIRONMENTAL, 4),
    ENCHANTED_BOOK_PUNCH_1("ENCHANTED_BOOK", Enchantment.ARROW_KNOCKBACK, 1),
    ENCHANTED_BOOK_PUNCH_2("ENCHANTED_BOOK", Enchantment.ARROW_KNOCKBACK, 2),
    ENCHANTED_BOOK_QUICK_CHARGE_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("QUICK_CHARGE") != null ? "QUICK_CHARGE" : "ARROW_KNOCKBACK"), 1),
    ENCHANTED_BOOK_QUICK_CHARGE_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("QUICK_CHARGE") != null ? "QUICK_CHARGE" : "ARROW_KNOCKBACK"), 2),
    ENCHANTED_BOOK_QUICK_CHARGE_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("QUICK_CHARGE") != null ? "QUICK_CHARGE" : "ARROW_KNOCKBACK"), 3),
    ENCHANTED_BOOK_RESPIRATION_1("ENCHANTED_BOOK", Enchantment.OXYGEN, 1),
    ENCHANTED_BOOK_RESPIRATION_2("ENCHANTED_BOOK", Enchantment.OXYGEN, 2),
    ENCHANTED_BOOK_RESPIRATION_3("ENCHANTED_BOOK", Enchantment.OXYGEN, 3),
    ENCHANTED_BOOK_RIPTIDE_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("RIPTIDE") != null ? "RIPTIDE" : "OXYGEN"), 1),
    ENCHANTED_BOOK_RIPTIDE_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("RIPTIDE") != null ? "RIPTIDE" : "OXYGEN"), 2),
    ENCHANTED_BOOK_RIPTIDE_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("RIPTIDE") != null ? "RIPTIDE" : "OXYGEN"), 3),
    ENCHANTED_BOOK_SHARPNESS_1("ENCHANTED_BOOK", Enchantment.DAMAGE_ALL, 1),
    ENCHANTED_BOOK_SHARPNESS_2("ENCHANTED_BOOK", Enchantment.DAMAGE_ALL, 2),
    ENCHANTED_BOOK_SHARPNESS_3("ENCHANTED_BOOK", Enchantment.DAMAGE_ALL, 3),
    ENCHANTED_BOOK_SHARPNESS_4("ENCHANTED_BOOK", Enchantment.DAMAGE_ALL, 4),
    ENCHANTED_BOOK_SHARPNESS_5("ENCHANTED_BOOK", Enchantment.DAMAGE_ALL, 5),
    ENCHANTED_BOOK_SILK_TOUCH("ENCHANTED_BOOK", Enchantment.SILK_TOUCH, 1),
    ENCHANTED_BOOK_SMITE_1("ENCHANTED_BOOK", Enchantment.DAMAGE_UNDEAD, 1),
    ENCHANTED_BOOK_SMITE_2("ENCHANTED_BOOK", Enchantment.DAMAGE_UNDEAD, 2),
    ENCHANTED_BOOK_SMITE_3("ENCHANTED_BOOK", Enchantment.DAMAGE_UNDEAD, 3),
    ENCHANTED_BOOK_SMITE_4("ENCHANTED_BOOK", Enchantment.DAMAGE_UNDEAD, 4),
    ENCHANTED_BOOK_SMITE_5("ENCHANTED_BOOK", Enchantment.DAMAGE_UNDEAD, 5),
    ENCHANTED_BOOK_SOUL_SPEED_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("SOUL_SPEED") != null ? "SOUL_SPEED" : "FEATHER_FALLING"), 1),
    ENCHANTED_BOOK_SOUL_SPEED_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("SOUL_SPEED") != null ? "SOUL_SPEED" : "FEATHER_FALLING"), 2),
    ENCHANTED_BOOK_SOUL_SPEED_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("SOUL_SPEED") != null ? "SOUL_SPEED" : "FEATHER_FALLING"), 3),
    ENCHANTED_BOOK_SWEEPING_EDGE_1("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("SWEEPING_EDGE") != null ? "SWEEPING_EDGE" : "DAMAGE_UNDEAD"), 1),
    ENCHANTED_BOOK_SWEEPING_EDGE_2("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("SWEEPING_EDGE") != null ? "SWEEPING_EDGE" : "DAMAGE_UNDEAD"), 2),
    ENCHANTED_BOOK_SWEEPING_EDGE_3("ENCHANTED_BOOK", Enchantment.getByName(Enchantment.getByName("SWEEPING_EDGE") != null ? "SWEEPING_EDGE" : "DAMAGE_UNDEAD"), 3),
    ENCHANTED_BOOK_THORNS_1("ENCHANTED_BOOK", Enchantment.THORNS, 1),
    ENCHANTED_BOOK_THORNS_2("ENCHANTED_BOOK", Enchantment.THORNS, 2),
    ENCHANTED_BOOK_THORNS_3("ENCHANTED_BOOK", Enchantment.THORNS, 3),
    ENCHANTED_BOOK_UNBREAKING_1("ENCHANTED_BOOK", Enchantment.DURABILITY, 1),
    ENCHANTED_BOOK_UNBREAKING_2("ENCHANTED_BOOK", Enchantment.DURABILITY, 2),
    ENCHANTED_BOOK_UNBREAKING_3("ENCHANTED_BOOK", Enchantment.DURABILITY, 3),
    ENCHANTED_GOLDEN_APPLE(1, "GOLDEN_APPLE"),
    ENCHANTING_TABLE("ENCHANTMENT_TABLE"),
    END_CRYSTAL,
    END_GATEWAY,
    END_PORTAL,
    END_PORTAL_FRAME("ENDER_PORTAL_FRAME"),
    END_ROD,
    END_STONE("ENDER_STONE"),
    END_STONE_BRICK_SLAB,
    END_STONE_BRICK_STAIRS,
    END_STONE_BRICK_WALL,
    END_STONE_BRICKS("END_BRICKS"),
    ENDER_CHEST,
    ENDER_EYE("EYE_OF_ENDER"),
    ENDER_PEARL,
    ENDERMAN_SPAWN_EGG(58, "MONSTER_EGG"),
    ENDERMITE_SPAWN_EGG(67, "MONSTER_EGG"),
    EVOKER_SPAWN_EGG(34, "MONSTER_EGG"),
    EXPERIENCE_BOTTLE("EXP_BOTTLE"),
    FARMLAND("SOIL"),
    FEATHER,
    FERMENTED_SPIDER_EYE,
    FERN(2, "LONG_GRASS"),
    FILLED_MAP("MAP"),
    FIRE,
    FIRE_CHARGE("FIREBALL"),
    FIRE_CORAL,
    FIRE_CORAL_BLOCK,
    FIRE_CORAL_FAN,
    FIRE_CORAL_WALL_FAN,
    FIREWORK_ROCKET("FIREWORK"),
    FIREWORK_STAR("FIREWORK_CHARGE"),
    FISHING_ROD,
    FLETCHING_TABLE,
    FLINT,
    FLINT_AND_STEEL,
    FLOWER_BANNER_PATTERN,
    FLOWER_POT,
    FLOWER_POT_ITEM("FLOWER_POT"),
    FOX_SPAWN_EGG,
    FROSTED_ICE,
    FURNACE,
    FURNACE_MINECART("POWERED_MINECART"),
    GHAST_SPAWN_EGG(56, "MONSTER_EGG"),
    GHAST_TEAR,
    GILDED_BLACKSTONE,
    GLASS,
    GLASS_BOTTLE,
    GLASS_PANE("THIN_GLASS"),
    GLISTERING_MELON_SLICE("SPECKLED_MELON"),
    GLOBE_BANNER_PATTERN,
    GLOW_BERRIES,
    GLOW_INK_SAC,
    GLOW_ITEM_FRAME,
    GLOW_LICHEN,
    GLOW_SQUID_SPAWN_EGG,
    GLOWING_REDSTONE_ORE("LEGACY_GLOWING_REDSTONE_ORE"),
    GLOWSTONE,
    GLOWSTONE_DUST,
    GOAT_SPAWN_EGG,
    GOLD_BLOCK,
    GOLD_INGOT,
    GOLD_NUGGET,
    GOLD_ORE,
    GOLDEN_APPLE,
    GOLDEN_AXE("GOLD_AXE"),
    GOLDEN_BOOTS("GOLD_BOOTS"),
    GOLDEN_CARROT,
    GOLDEN_CHESTPLATE("GOLD_CHESTPLATE"),
    GOLDEN_HELMET("GOLD_HELMET"),
    GOLDEN_HOE("GOLD_HOE"),
    GOLDEN_HORSE_ARMOR("GOLD_BARDING"),
    GOLDEN_LEGGINGS("GOLD_LEGGINGS"),
    GOLDEN_PICKAXE("GOLD_PICKAXE"),
    GOLDEN_SHOVEL("GOLD_SPADE"),
    GOLDEN_SWORD("GOLD_SWORD"),
    GRANITE(1, "STONE"),
    GRANITE_SLAB,
    GRANITE_STAIRS,
    GRANITE_WALL,
    GRASS,
    GRASS_BLOCK("GRASS"),
    GRASS_PATH,
    GRAVEL,
    GRAY_BANNER(8, "BANNER"),
    GRAY_BED(7, "BED"),
    GRAY_CANDLE,
    GRAY_CANDLE_CAKE,
    GRAY_CARPET(7, "CARPET"),
    GRAY_CONCRETE(7, "CONCRETE"),
    GRAY_CONCRETE_POWDER(7, "CONCRETE_POWDER"),
    GRAY_DYE(8, "INK_SACK"),
    GRAY_GLAZED_TERRACOTTA,
    GRAY_LEATHER_BOOTS("LEATHER_BOOTS", 7, Color.fromRGB(76, 76, 76)),
    GRAY_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 7, Color.fromRGB(76, 76, 76)),
    GRAY_LEATHER_HELMET("LEATHER_HELMET", 7, Color.fromRGB(76, 76, 76)),
    GRAY_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 7, Color.fromRGB(76, 76, 76)),
    GRAY_SHULKER_BOX,
    GRAY_STAINED_GLASS(7, "STAINED_GLASS"),
    GRAY_STAINED_GLASS_PANE(7, "STAINED_GLASS_PANE"),
    GRAY_TERRACOTTA(7, "STAINED_CLAY"),
    GRAY_WALL_BANNER(8, "BANNER"),
    GRAY_WOOL(7, "WOOL"),
    GREEN_BANNER(2, "BANNER"),
    GREEN_BED(13, "BED"),
    GREEN_CANDLE,
    GREEN_CANDLE_CAKE,
    GREEN_CARPET(13, "CARPET"),
    GREEN_CONCRETE(13, "CONCRETE"),
    GREEN_CONCRETE_POWDER(13, "CONCRETE_POWDER"),
    GREEN_DYE(2, "INK_SACK", "CACTUS_GREEN"),
    GREEN_GLAZED_TERRACOTTA,
    GREEN_LEATHER_BOOTS("LEATHER_BOOTS", 13, Color.fromRGB(102, 127, 51)),
    GREEN_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 13, Color.fromRGB(102, 127, 51)),
    GREEN_LEATHER_HELMET("LEATHER_HELMET", 13, Color.fromRGB(102, 127, 51)),
    GREEN_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 13, Color.fromRGB(102, 127, 51)),
    GREEN_SHULKER_BOX,
    GREEN_STAINED_GLASS(13, "STAINED_GLASS"),
    GREEN_STAINED_GLASS_PANE(13, "STAINED_GLASS_PANE"),
    GREEN_TERRACOTTA(13, "STAINED_CLAY"),
    GREEN_WALL_BANNER(2, "BANNER"),
    GREEN_WOOL(13, "WOOL"),
    GRINDSTONE,
    GUARDIAN_SPAWN_EGG(68, "MONSTER_EGG"),
    GUNPOWDER("SULPHUR"),
    HANGING_ROOTS,
    HAY_BLOCK,
    HEART_OF_THE_SEA,
    HEAVY_WEIGHTED_PRESSURE_PLATE("IRON_PLATE"),
    HOGLIN_SPAWN_EGG,
    HONEY_BLOCK,
    HONEY_BOTTLE,
    HONEYCOMB,
    HONEYCOMB_BLOCK,
    HOPPER,
    HOPPER_MINECART,
    HORN_CORAL,
    HORN_CORAL_BLOCK,
    HORN_CORAL_FAN,
    HORN_CORAL_WALL_FAN,
    HORSE_SPAWN_EGG(100, "MONSTER_EGG"),
    HUSK_SPAWN_EGG(23, "MONSTER_EGG"),
    ICE,
    INFESTED_CHISELED_STONE_BRICKS(5, "MONSTER_EGGS"),
    INFESTED_COBBLESTONE(1, "MONSTER_EGGS"),
    INFESTED_CRACKED_STONE_BRICKS(4, "MONSTER_EGGS"),
    INFESTED_DEEPSLATE,
    INFESTED_MOSSY_STONE_BRICKS(3, "MONSTER_EGGS"),
    INFESTED_STONE("MONSTER_EGGS"),
    INFESTED_STONE_BRICKS(2, "MONSTER_EGGS"),
    INK_SAC("INK_SACK"),
    IRON_AXE,
    IRON_BARS("IRON_FENCE"),
    IRON_BLOCK,
    IRON_BOOTS,
    IRON_CHESTPLATE,
    IRON_DOOR("IRON_DOOR_BLOCK"),
    IRON_DOOR_ITEM("IRON_DOOR"),
    IRON_HELMET,
    IRON_HOE,
    IRON_HORSE_ARMOR("IRON_BARDING"),
    IRON_INGOT,
    IRON_LEGGINGS,
    IRON_NUGGET,
    IRON_ORE,
    IRON_PICKAXE,
    IRON_SHOVEL("IRON_SPADE"),
    IRON_SWORD,
    IRON_TRAPDOOR,
    ITEM_FRAME,
    JACK_O_LANTERN,
    JIGSAW,
    JUKEBOX,
    JUNGLE_BOAT("BOAT", "BOAT_JUNGLE"),
    JUNGLE_BUTTON("WOOD_BUTTON"),
    JUNGLE_DOOR,
    JUNGLE_DOOR_ITEM("JUNGLE_DOOR"),
    JUNGLE_FENCE,
    JUNGLE_FENCE_GATE,
    JUNGLE_LEAVES(3, "LEAVES"),
    JUNGLE_LOG(3, "LOG"),
    JUNGLE_PLANKS(3, "WOOD"),
    JUNGLE_PRESSURE_PLATE("WOOD_PLATE"),
    JUNGLE_SAPLING(3, "SAPLING"),
    JUNGLE_SIGN("SIGN"),
    JUNGLE_SLAB(3, "WOOD_STEP"),
    JUNGLE_STAIRS("JUNGLE_WOOD_STAIRS"),
    JUNGLE_TRAPDOOR("TRAP_DOOR"),
    JUNGLE_WALL_SIGN("WALL_SIGN"),
    JUNGLE_WOOD(15, "LOG"),
    KELP,
    KELP_PLANT,
    KNOWLEDGE_BOOK("BOOK"),
    LADDER,
    LANTERN,
    LAPIS_BLOCK,
    LAPIS_LAZULI(4, "INK_SACK"),
    LAPIS_ORE,
    LARGE_AMETHYST_BUD,
    LARGE_FERN(3, "DOUBLE_PLANT"),
    LAVA,
    LAVA_BUCKET,
    LEAD("LEASH"),
    LEATHER,
    LEATHER_BOOTS,
    LEATHER_CHESTPLATE,
    LEATHER_HELMET,
    LEATHER_HORSE_ARMOR,
    LEATHER_LEGGINGS,
    LECTERN,
    LEVER,
    LIGHT_BLUE_BANNER(12, "BANNER"),
    LIGHT_BLUE_BED(3, "BED"),
    LIGHT_BLUE_CANDLE,
    LIGHT_BLUE_CANDLE_CAKE,
    LIGHT_BLUE_CARPET(3, "CARPET"),
    LIGHT_BLUE_CONCRETE(3, "CONCRETE"),
    LIGHT_BLUE_CONCRETE_POWDER(3, "CONCRETE_POWDER"),
    LIGHT_BLUE_DYE(12, "INK_SACK"),
    LIGHT_BLUE_GLAZED_TERRACOTTA,
    LIGHT_BLUE_SHULKER_BOX,
    LIGHT_BLUE_LEATHER_BOOTS("LEATHER_BOOTS", 3, Color.fromRGB(102, 153, 216)),
    LIGHT_BLUE_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 3, Color.fromRGB(102, 153, 216)),
    LIGHT_BLUE_LEATHER_HELMET("LEATHER_HELMET", 3, Color.fromRGB(102, 153, 216)),
    LIGHT_BLUE_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 3, Color.fromRGB(102, 153, 216)),
    LIGHT_BLUE_STAINED_GLASS(3, "STAINED_GLASS"),
    LIGHT_BLUE_STAINED_GLASS_PANE(3, "STAINED_GLASS_PANE"),
    LIGHT_BLUE_TERRACOTTA(3, "STAINED_CLAY"),
    LIGHT_BLUE_WALL_BANNER(12, "BANNER"),
    LIGHT_BLUE_WOOL(3, "WOOL"),
    LIGHT_GRAY_BANNER(7, "BANNER"),
    LIGHT_GRAY_BED(8, "BED"),
    LIGHT_GRAY_CANDLE,
    LIGHT_GRAY_CANDLE_CAKE,
    LIGHT_GRAY_CARPET(8, "CARPET"),
    LIGHT_GRAY_CONCRETE(8, "CONCRETE"),
    LIGHT_GRAY_CONCRETE_POWDER(8, "CONCRETE_POWDER"),
    LIGHT_GRAY_DYE(7, "INK_SACK"),
    LIGHT_GRAY_GLAZED_TERRACOTTA("SILVER_GLAZED_TERRACOTTA"),
    LIGHT_GRAY_LEATHER_BOOTS("LEATHER_BOOTS", 8, Color.fromRGB(153, 153, 153)),
    LIGHT_GRAY_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 8, Color.fromRGB(153, 153, 153)),
    LIGHT_GRAY_LEATHER_HELMET("LEATHER_HELMET", 8, Color.fromRGB(153, 153, 153)),
    LIGHT_GRAY_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 8, Color.fromRGB(153, 153, 153)),
    LIGHT_GRAY_SHULKER_BOX("SILVER_SHULKER_BOX"),
    LIGHT_GRAY_STAINED_GLASS(8, "STAINED_GLASS"),
    LIGHT_GRAY_STAINED_GLASS_PANE(8, "STAINED_GLASS_PANE"),
    LIGHT_GRAY_TERRACOTTA(8, "STAINED_CLAY"),
    LIGHT_GRAY_WALL_BANNER(7, "BANNER"),
    LIGHT_GRAY_WOOL(8, "WOOL"),
    LIGHT_WEIGHTED_PRESSURE_PLATE("GOLD_PLATE"),
    LIGHTNING_ROD,
    LILAC(1, "DOUBLE_PLANT"),
    LILY_OF_THE_VALLEY,
    LILY_PAD("WATER_LILY"),
    LIME_BANNER(10, "BANNER"),
    LIME_BED(5, "BED"),
    LIME_CANDLE,
    LIME_CANDLE_CAKE,
    LIME_CARPET(5, "CARPET"),
    LIME_CONCRETE(10, "CONCRETE"),
    LIME_CONCRETE_POWDER(5, "CONCRETE_POWDER"),
    LIME_DYE(10, "INK_SACK"),
    LIME_GLAZED_TERRACOTTA,
    LIME_LEATHER_BOOTS("LEATHER_BOOTS", 5, Color.fromRGB(127, 204, 25)),
    LIME_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 5, Color.fromRGB(127, 204, 25)),
    LIME_LEATHER_HELMET("LEATHER_HELMET", 5, Color.fromRGB(127, 204, 25)),
    LIME_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 5, Color.fromRGB(127, 204, 25)),
    LIME_SHULKER_BOX,
    LIME_STAINED_GLASS(5, "STAINED_GLASS"),
    LIME_STAINED_GLASS_PANE(5, "STAINED_GLASS_PANE"),
    LIME_TERRACOTTA(5, "STAINED_CLAY"),
    LIME_WALL_BANNER(10, "BANNER"),
    LIME_WOOL(5, "WOOL"),
    LINGERING_POTION,
    LINGERING_POTION_AWKWARD(PotionBase.LINGERING,"AWKWARD", false, false, "LINGERING_POTION"),
    LINGERING_POTION_FIRE_RESISTANCE(PotionBase.LINGERING, "FIRE_RESISTANCE", false, false, "LINGERING_POTION"),
    LINGERING_POTION_FIRE_RESISTANCE_EXTENDED(PotionBase.LINGERING, "FIRE_RESISTANCE", true, false, "LINGERING_POTION"),
    LINGERING_POTION_HARMING_1(PotionBase.LINGERING, "INSTANT_DAMAGE", false, false, "LINGERING_POTION"),
    LINGERING_POTION_HARMING_2(PotionBase.LINGERING, "INSTANT_DAMAGE", false, true, "LINGERING_POTION"),
    LINGERING_POTION_HEALING_1(PotionBase.LINGERING, "INSTANT_HEAL", false, false, "LINGERING_POTION"),
    LINGERING_POTION_HEALING_2(PotionBase.LINGERING, "INSTANT_HEAL", false, true, "LINGERING_POTION"),
    LINGERING_POTION_INVISIBILITY(PotionBase.LINGERING, "INVISIBILITY", false, false, "LINGERING_POTION"),
    LINGERING_POTION_INVISIBILITY_EXTENDED(PotionBase.LINGERING, "INVISIBILITY", true, false, "LINGERING_POTION"),
    LINGERING_POTION_LEAPING_1(PotionBase.LINGERING, "JUMP", false, false, "LINGERING_POTION"),
    LINGERING_POTION_LEAPING_1_EXTENDED(PotionBase.LINGERING, "JUMP", true, false, "LINGERING_POTION"),
    LINGERING_POTION_LEAPING_2(PotionBase.LINGERING, "JUMP", false, true, "LINGERING_POTION"),
    LINGERING_POTION_LUCK(PotionBase.LINGERING, "LUCK", false, false, "LINGERING_POTION"),
    LINGERING_POTION_MUNDANE(PotionBase.LINGERING, "MUNDANE", false, false, "LINGERING_POTION"),
    LINGERING_POTION_NIGHT_VISION(PotionBase.LINGERING, "NIGHT_VISION", false, false, "LINGERING_POTION"),
    LINGERING_POTION_NIGHT_VISION_EXTENDED(PotionBase.LINGERING, "NIGHT_VISION", true, false, "LINGERING_POTION"),
    LINGERING_POTION_POISON_1(PotionBase.LINGERING, "POISON", false, false, "LINGERING_POTION"),
    LINGERING_POTION_POISON_1_EXTENDED(PotionBase.LINGERING, "POISON", true, false, "LINGERING_POTION"),
    LINGERING_POTION_POISON_2(PotionBase.LINGERING, "POISON", false, true, "LINGERING_POTION"),
    LINGERING_POTION_REGENERATION_1(PotionBase.LINGERING, "REGEN", false, false, "LINGERING_POTION"),
    LINGERING_POTION_REGENERATION_1_EXTENDED(PotionBase.LINGERING, "REGEN", true, false, "LINGERING_POTION"),
    LINGERING_POTION_REGENERATION_2(PotionBase.LINGERING, "REGEN", false, true, "LINGERING_POTION"),
    LINGERING_POTION_SLOW_FALLING(PotionBase.LINGERING, "SLOW_FALLING", false, false, "LINGERING_POTION"),
    LINGERING_POTION_SLOW_FALLING_EXTENDED(PotionBase.LINGERING, "SLOW_FALLING", true, false, "LINGERING_POTION"),
    LINGERING_POTION_SLOWNESS_1(PotionBase.LINGERING, "SLOWNESS", false, false, "LINGERING_POTION"),
    LINGERING_POTION_SLOWNESS_1_EXTENDED(PotionBase.LINGERING, "SLOWNESS", true, false, "LINGERING_POTION"),
    LINGERING_POTION_SLOWNESS_2(PotionBase.LINGERING, "SLOWNESS", false, true, "LINGERING_POTION"),
    LINGERING_POTION_STRENGTH_1(PotionBase.LINGERING, "STRENGTH", false, false, "LINGERING_POTION"),
    LINGERING_POTION_STRENGTH_1_EXTENDED(PotionBase.LINGERING, "STRENGTH", true, false, "LINGERING_POTION"),
    LINGERING_POTION_STRENGTH_2(PotionBase.LINGERING, "STRENGTH", false, true, "LINGERING_POTION"),
    LINGERING_POTION_SWIFTNESS_1(PotionBase.LINGERING, "SPEED", false, false, "LINGERING_POTION"),
    LINGERING_POTION_SWIFTNESS_1_EXTENDED(PotionBase.LINGERING, "SPEED", true, false, "LINGERING_POTION"),
    LINGERING_POTION_SWIFTNESS_2(PotionBase.LINGERING, "SPEED", false, true, "LINGERING_POTION"),
    LINGERING_POTION_THICK(PotionBase.LINGERING, "THICK", false, false, "LINGERING_POTION"),
    LINGERING_POTION_TURTLE_MASTER_1(PotionBase.LINGERING, "TURTLE_MASTER", false, false, "LINGERING_POTION"),
    LINGERING_POTION_TURTLE_MASTER_1_EXTENDED(PotionBase.LINGERING, "TURTLE_MASTER", true, false, "LINGERING_POTION"),
    LINGERING_POTION_TURTLE_MASTER_2(PotionBase.LINGERING, "TURTLE_MASTER", false, true, "LINGERING_POTION"),
    LINGERING_POTION_WATER(PotionBase.LINGERING, "WATER", false, false, "LINGERING_POTION"),
    LINGERING_POTION_WATER_BREATHING(PotionBase.LINGERING, "WATER_BREATHING", false, false, "LINGERING_POTION"),
    LINGERING_POTION_WATER_BREATHING_EXTENDED(PotionBase.LINGERING, "WATER_BREATHING", true, false, "LINGERING_POTION"),
    LINGERING_POTION_WEAKNESS(PotionBase.LINGERING, "WEAKNESS", false, false, "LINGERING_POTION"),
    LINGERING_POTION_WEAKNESS_EXTENDED(PotionBase.LINGERING, "WEAKNESS", true, false, "LINGERING_POTION"),
    LLAMA_SPAWN_EGG(103, "MONSTER_EGG"),
    LODESTONE,
    LOOM,
    MAGENTA_BANNER(13, "BANNER"),
    MAGENTA_BED(2, "BED"),
    MAGENTA_CANDLE,
    MAGENTA_CANDLE_CAKE,
    MAGENTA_CARPET(2, "CARPET"),
    MAGENTA_CONCRETE(2, "CONCRETE"),
    MAGENTA_CONCRETE_POWDER(2, "CONCRETE_POWDER"),
    MAGENTA_DYE(13, "INK_SACK"),
    MAGENTA_GLAZED_TERRACOTTA,
    MAGENTA_LEATHER_BOOTS("LEATHER_BOOTS", 2, Color.fromRGB(178, 76, 216)),
    MAGENTA_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 2, Color.fromRGB(178, 76, 216)),
    MAGENTA_LEATHER_HELMET("LEATHER_HELMET", 2, Color.fromRGB(178, 76, 216)),
    MAGENTA_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 2, Color.fromRGB(178, 76, 216)),
    MAGENTA_SHULKER_BOX,
    MAGENTA_STAINED_GLASS(2, "STAINED_GLASS"),
    MAGENTA_STAINED_GLASS_PANE(2, "STAINED_GLASS_PANE"),
    MAGENTA_TERRACOTTA(2, "STAINED_CLAY"),
    MAGENTA_WALL_BANNER(13, "BANNER"),
    MAGENTA_WOOL(2, "WOOL"),
    MAGMA_BLOCK("MAGMA"),
    MAGMA_CREAM,
    MAGMA_CUBE_SPAWN_EGG(62, "MONSTER_EGG"),
    MAP("EMPTY_MAP"),
    MEDIUM_AMETHYST_BUD,
    MELON("MELON_BLOCK"),
    MELON_SEEDS,
    MELON_SLICE("MELON"),
    MELON_STEM,
    MILK_BUCKET,
    MINECART,
    MOJANG_BANNER_PATTERN,
    MOOSHROOM_SPAWN_EGG(96, "MONSTER_EGG"),
    MOSS_BLOCK,
    MOSS_CARPET,
    MOSSY_COBBLESTONE,
    MOSSY_COBBLESTONE_SLAB,
    MOSSY_COBBLESTONE_STAIRS,
    MOSSY_COBBLESTONE_WALL(1, "COBBLE_WALL"),
    MOSSY_STONE_BRICK_SLAB,
    MOSSY_STONE_BRICK_STAIRS,
    MOSSY_STONE_BRICK_WALL,
    MOSSY_STONE_BRICKS(1, "SMOOTH_BRICK"),
    MOVING_PISTON,
    MULE_SPAWN_EGG(32, "MONSTER_EGG"),
    MUSHROOM_STEM,
    MUSHROOM_STEW("MUSHROOM_SOUP"),
    MUSIC_DISC_11("RECORD_11"),
    MUSIC_DISC_13("GOLD_RECORD"),
    MUSIC_DISC_BLOCKS("RECORD_3"),
    MUSIC_DISC_CAT("GREEN_RECORD"),
    MUSIC_DISC_CHIRP("RECORD_4"),
    MUSIC_DISC_FAR("RECORD_5"),
    MUSIC_DISC_MALL("RECORD_6"),
    MUSIC_DISC_MELLOHI("RECORD_7"),
    MUSIC_DISC_OTHERSIDE,
    MUSIC_DISC_PIGSTEP,
    MUSIC_DISC_STAL("RECORD_8"),
    MUSIC_DISC_STRAD("RECORD_9"),
    MUSIC_DISC_WAIT("RECORD_12"),
    MUSIC_DISC_WARD("RECORD_10"),
    MUTTON,
    MYCELIUM("MYCEL"),
    NAME_TAG,
    NAUTILUS_SHELL,
    NETHER_BRICK("NETHER_BRICK_ITEM"),
    NETHER_BRICK_FENCE("NETHER_FENCE"),
    NETHER_BRICK_SLAB(6, "STEP"),
    NETHER_BRICK_STAIRS,
    NETHER_BRICK_WALL,
    NETHER_BRICKS("NETHER_BRICK"),
    NETHER_GOLD_ORE,
    NETHER_PORTAL("PORTAL"),
    NETHER_QUARTZ_ORE("QUARTZ_ORE"),
    NETHER_SPROUTS,
    NETHER_STAR,
    NETHER_WART("NETHER_STALK"),
    NETHER_WART_BLOCK("NETHER_WARTS"),
    NETHERITE_AXE,
    NETHERITE_BLOCK,
    NETHERITE_BOOTS,
    NETHERITE_CHESTPLATE,
    NETHERITE_HELMET,
    NETHERITE_HOE,
    NETHERITE_INGOT,
    NETHERITE_LEGGINGS,
    NETHERITE_PICKAXE,
    NETHERITE_SCRAP,
    NETHERITE_SHOVEL,
    NETHERITE_SWORD,
    NETHERRACK,
    NOTE_BLOCK,
    OAK_BOAT("BOAT"),
    OAK_BUTTON("WOOD_BUTTON"),
    OAK_DOOR("WOOD_DOOR"),
    OAK_DOOR_ITEM("WOOD_DOOR", "OAK_DOOR"),
    OAK_FENCE("FENCE"),
    OAK_FENCE_GATE("FENCE_GATE"),
    OAK_LEAVES("LEAVES"),
    OAK_LOG("LOG"),
    OAK_PLANKS("WOOD"),
    OAK_PRESSURE_PLATE("WOOD_PLATE"),
    OAK_SAPLING("SAPLING"),
    OAK_SIGN("SIGN"),
    OAK_SLAB("WOOD_STEP"),
    OAK_STAIRS("WOOD_STAIRS"),
    OAK_TRAPDOOR("TRAP_DOOR"),
    OAK_WALL_SIGN("WALL_SIGN"),
    OAK_WOOD(12, "LOG"),
    OBSERVER,
    OBSIDIAN,
    OCELOT_SPAWN_EGG(98, "MONSTER_EGG"),
    ORANGE_BANNER(14, "BANNER"),
    ORANGE_BED(1, "BED"),
    ORANGE_CANDLE,
    ORANGE_CANDLE_CAKE,
    ORANGE_CARPET(1, "CARPET"),
    ORANGE_CONCRETE(1, "CONCRETE"),
    ORANGE_CONCRETE_POWDER(1, "CONCRETE_POWDER"),
    ORANGE_DYE(14, "INK_SACK"),
    ORANGE_GLAZED_TERRACOTTA,
    ORANGE_LEATHER_BOOTS("LEATHER_BOOTS", 1, Color.fromRGB(216, 127, 51)),
    ORANGE_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 1, Color.fromRGB(216, 127, 51)),
    ORANGE_LEATHER_HELMET("LEATHER_HELMET", 1, Color.fromRGB(216, 127, 51)),
    ORANGE_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 1, Color.fromRGB(216, 127, 51)),
    ORANGE_SHULKER_BOX,
    ORANGE_STAINED_GLASS(1, "STAINED_GLASS"),
    ORANGE_STAINED_GLASS_PANE(1, "STAINED_GLASS_PANE"),
    ORANGE_TERRACOTTA(1, "STAINED_CLAY"),
    ORANGE_TULIP(5, "RED_ROSE"),
    ORANGE_WALL_BANNER(14, "BANNER"),
    ORANGE_WOOL(1, "WOOL"),
    OXEYE_DAISY(8, "RED_ROSE"),
    PACKED_ICE,
    PAINTING,
    PANDA_SPAWN_EGG,
    PAPER,
    PARROT_SPAWN_EGG(105, "MONSTER_EGG"),
    PEONY(5, "DOUBLE_PLANT"),
    PETRIFIED_OAK_SLAB,
    PHANTOM_MEMBRANE,
    PHANTOM_SPAWN_EGG,
    PIG_SPAWN_EGG(90, "MONSTER_EGG"),
    PIGLIN_BANNER_PATTERN,
    PIGLIN_BRUTE_SPAWN_EGG,
    PIGLIN_SPAWN_EGG,
    PILLAGER_SPAWN_EGG,
    PINK_BANNER(9, "BANNER"),
    PINK_BED(6, "BED"),
    PINK_CANDLE,
    PINK_CANDLE_CAKE,
    PINK_CARPET(6, "CARPET"),
    PINK_CONCRETE(6, "CONCRETE"),
    PINK_CONCRETE_POWDER(6, "CONCRETE_POWDER"),
    PINK_DYE(9, "INK_SACK"),
    PINK_GLAZED_TERRACOTTA,
    PINK_LEATHER_BOOTS("LEATHER_BOOTS", 6, Color.fromRGB(242, 127, 165)),
    PINK_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 6, Color.fromRGB(242, 127, 165)),
    PINK_LEATHER_HELMET("LEATHER_HELMET", 6, Color.fromRGB(242, 127, 165)),
    PINK_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 6, Color.fromRGB(242, 127, 165)),
    PINK_SHULKER_BOX,
    PINK_STAINED_GLASS(6, "STAINED_GLASS"),
    PINK_STAINED_GLASS_PANE(6, "STAINED_GLASS_PANE"),
    PINK_TERRACOTTA(6, "STAINED_CLAY"),
    PINK_TULIP(7, "RED_ROSE"),
    PINK_WALL_BANNER(9, "BANNER"),
    PINK_WOOL(6, "WOOL"),
    PISTON("PISTON_BASE"),
    PISTON_HEAD("PISTON_EXTENSION"),
    PLAYER_HEAD(3, "SKULL"),
    PLAYER_HEAD_ITEM(3, "SKULL_ITEM", "PLAYER_HEAD"),
    PLAYER_WALL_HEAD(3, "SKULL"),
    PODZOL(2, "DIRT"),
    POINTED_DRIPSTONE,
    POISONOUS_POTATO,
    POLAR_BEAR_SPAWN_EGG(102, "MONSTER_EGG"),
    POLISHED_ANDESITE(6, "STONE"),
    POLISHED_ANDESITE_SLAB,
    POLISHED_ANDESITE_STAIRS,
    POLISHED_BASALT,
    POLISHED_BLACKSTONE_BRICK_SLAB,
    POLISHED_BLACKSTONE_BRICK_STAIRS,
    POLISHED_BLACKSTONE_BRICK_WALL,
    POLISHED_BLACKSTONE_BRICKS,
    POLISHED_BLACKSTONE_BUTTON,
    POLISHED_BLACKSTONE_PRESSURE_PLATE,
    POLISHED_BLACKSTONE_SLAB,
    POLISHED_BLACKSTONE_STAIRS,
    POLISHED_BLACKSTONE_WALL,
    POLISHED_DEEPSLATE,
    POLISHED_DEEPSLATE_SLAB,
    POLISHED_DEEPSLATE_STAIRS,
    POLISHED_DEEPSLATE_WALL,
    POLISHED_DIORITE(4, "STONE"),
    POLISHED_DIORITE_SLAB,
    POLISHED_DIORITE_STAIRS,
    POLISHED_GRANITE(2, "STONE"),
    POLISHED_GRANITE_SLAB,
    POLISHED_GRANITE_STAIRS,
    POPPED_CHORUS_FRUIT("CHORUS_FRUIT_POPPED"),
    POPPY("RED_ROSE"),
    PORKCHOP("PORK"),
    POTATO_ITEM("POTATO"),
    POTATOES("POTATO"),
    POTION,
    POTION_AWKWARD(PotionBase.NORMAL, "AWKWARD", false, false, "POTION"),
    POTION_FIRE_RESISTANCE(PotionBase.NORMAL, "FIRE_RESISTANCE", false, false, "POTION"),
    POTION_FIRE_RESISTANCE_EXTENDED(PotionBase.NORMAL, "FIRE_RESISTANCE", true, false, "POTION"),
    POTION_HARMING_1(PotionBase.NORMAL, "INSTANT_DAMAGE", false, false, "POTION"),
    POTION_HARMING_2(PotionBase.NORMAL, "INSTANT_DAMAGE", false, true, "POTION"),
    POTION_HEALING_1(PotionBase.NORMAL, "INSTANT_HEAL", false, false, "POTION"),
    POTION_HEALING_2(PotionBase.NORMAL, "INSTANT_HEAL", false, true, "POTION"),
    POTION_INVISIBILITY(PotionBase.NORMAL, "INVISIBILITY", false, false, "POTION"),
    POTION_INVISIBILITY_EXTENDED(PotionBase.NORMAL, "INVISIBILITY", true, false, "POTION"),
    POTION_LEAPING_1(PotionBase.NORMAL, "JUMP", false, false, "POTION"),
    POTION_LEAPING_1_EXTENDED(PotionBase.NORMAL, "JUMP", true, false, "POTION"),
    POTION_LEAPING_2(PotionBase.NORMAL, "JUMP", false, true, "POTION"),
    POTION_LUCK(PotionBase.NORMAL, "LUCK", false, false, "POTION"),
    POTION_MUNDANE(PotionBase.NORMAL, "MUNDANE", false, false, "POTION"),
    POTION_NIGHT_VISION(PotionBase.NORMAL, "NIGHT_VISION", false, false, "POTION"),
    POTION_NIGHT_VISION_EXTENDED(PotionBase.NORMAL, "NIGHT_VISION", true, false, "POTION"),
    POTION_POISON_1(PotionBase.NORMAL, "POISON", false, false, "POTION"),
    POTION_POISON_1_EXTENDED(PotionBase.NORMAL, "POISON", true, false, "POTION"),
    POTION_POISON_2(PotionBase.NORMAL, "POISON", false, true, "POTION"),
    POTION_REGENERATION_1(PotionBase.NORMAL, "REGEN", false, false, "POTION"),
    POTION_REGENERATION_1_EXTENDED(PotionBase.NORMAL, "REGEN", true, false, "POTION"),
    POTION_REGENERATION_2(PotionBase.NORMAL, "REGEN", false, true, "POTION"),
    POTION_SLOW_FALLING(PotionBase.NORMAL, "SLOW_FALLING", false, false, "POTION"),
    POTION_SLOW_FALLING_EXTENDED(PotionBase.NORMAL, "SLOW_FALLING", true, false, "POTION"),
    POTION_SLOWNESS_1(PotionBase.NORMAL, "SLOWNESS", false, false, "POTION"),
    POTION_SLOWNESS_1_EXTENDED(PotionBase.NORMAL, "SLOWNESS", true, false, "POTION"),
    POTION_SLOWNESS_2(PotionBase.NORMAL, "SLOWNESS", false, true, "POTION"),
    POTION_STRENGTH_1(PotionBase.NORMAL, "STRENGTH", false, false, "POTION"),
    POTION_STRENGTH_1_EXTENDED(PotionBase.NORMAL, "STRENGTH", true, false, "POTION"),
    POTION_STRENGTH_2(PotionBase.NORMAL, "STRENGTH", false, true, "POTION"),
    POTION_SWIFTNESS_1(PotionBase.NORMAL, "SPEED", false, false, "POTION"),
    POTION_SWIFTNESS_1_EXTENDED(PotionBase.NORMAL, "SPEED", true, false, "POTION"),
    POTION_SWIFTNESS_2(PotionBase.NORMAL, "SPEED", false, true, "POTION"),
    POTION_THICK(PotionBase.NORMAL, "THICK", false, false, "POTION"),
    POTION_TURTLE_MASTER_1(PotionBase.NORMAL, "TURTLE_MASTER", false, false, "POTION"),
    POTION_TURTLE_MASTER_1_EXTENDED(PotionBase.NORMAL, "TURTLE_MASTER", true, false, "POTION"),
    POTION_TURTLE_MASTER_2(PotionBase.NORMAL, "TURTLE_MASTER", false, true, "POTION"),
    POTION_WATER(PotionBase.NORMAL, "WATER", false, false, "POTION"),
    POTION_WATER_BREATHING(PotionBase.NORMAL, "WATER_BREATHING", false, false, "POTION"),
    POTION_WATER_BREATHING_EXTENDED(PotionBase.NORMAL, "WATER_BREATHING", true, false, "POTION"),
    POTION_WEAKNESS(PotionBase.NORMAL, "WEAKNESS", false, false, "POTION"),
    POTION_WEAKNESS_EXTENDED(PotionBase.NORMAL, "WEAKNESS", true, false, "POTION"),
    POTTED_ACACIA_SAPLING,
    POTTED_ALLIUM,
    POTTED_AZURE_BLUET,
    POTTED_BAMBOO,
    POTTED_BIRCH_SAPLING,
    POTTED_BLUE_ORCHID,
    POTTED_BROWN_MUSHROOM,
    POTTED_CACTUS,
    POTTED_CORNFLOWER,
    POTTED_CRIMSON_FUNGUS,
    POTTED_CRIMSON_ROOTS,
    POTTED_DANDELION,
    POTTED_DARK_OAK_SAPLING,
    POTTED_DEAD_BUSH,
    POTTED_FERN,
    POTTED_JUNGLE_SAPLING,
    POTTED_LILY_OF_THE_VALLET,
    POTTED_OAK_SAPLING,
    POTTED_ORANGE_TULIP,
    POTTED_OXEYE_DAISY,
    POTTED_PINK_TULIP,
    POTTED_POPPY,
    POTTED_RED_MUSHROOM,
    POTTED_RED_TULIP,
    POTTED_SPRUCE_SAPLING,
    POTTED_WARPED_FUNGUS,
    POTTED_WARPED_ROOTS,
    POTTED_WHITE_TULIP,
    POTTED_WITHER_ROSE,
    POWDER_SNOW,
    POWDER_SNOW_BUCKET,
    POWDER_SNOW_CAULDRON,
    POWERED_RAIL,
    PRISMARINE,
    PRISMARINE_BRICK_SLAB,
    PRISMARINE_BRICK_STAIRS,
    PRISMARINE_BRICKS(1, "PRISMARINE"),
    PRISMARINE_CRYSTALS,
    PRISMARINE_SHARD,
    PRISMARINE_SLAB,
    PRISMARINE_STAIRS,
    PRISMARINE_WALL,
    PUFFERFISH(3, "RAW_FISH"),
    PUFFERFISH_BUCKET,
    PUFFERFISH_SPAWN_EGG,
    PUMPKIN,
    PUMPKIN_PIE,
    PUMPKIN_SEEDS,
    PUMPKIN_STEM,
    PURPLE_BANNER(5, "BANNER"),
    PURPLE_BED(10, "BED"),
    PURPLE_CANDLE,
    PURPLE_CANDLE_CAKE,
    PURPLE_CARPET(10, "CARPET"),
    PURPLE_CONCRETE(10, "CONCRETE"),
    PURPLE_CONCRETE_POWDER(10, "CONCRETE_POWDER"),
    PURPLE_DYE(5, "INK_SACK"),
    PURPLE_GLAZED_TERRACOTTA,
    PURPLE_LEATHER_BOOTS("LEATHER_BOOTS", 10, Color.fromRGB(127, 63, 178)),
    PURPLE_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 10, Color.fromRGB(127, 63, 178)),
    PURPLE_LEATHER_HELMET("LEATHER_HELMET", 10, Color.fromRGB(127, 63, 178)),
    PURPLE_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 10, Color.fromRGB(127, 63, 178)),
    PURPLE_SHULKER_BOX,
    PURPLE_STAINED_GLASS(10, "STAINED_GLASS"),
    PURPLE_STAINED_GLASS_PANE(10, "STAINED_GLASS_PANE"),
    PURPLE_TERRACOTTA(10, "STAINED_CLAY"),
    PURPLE_WALL_BANNER(5, "BANNER"),
    PURPLE_WOOL(10, "WOOL"),
    PURPUR_BLOCK,
    PURPUR_PILLAR,
    PURPUR_SLAB,
    PURPUR_STAIRS,
    QUARTZ,
    QUARTZ_BLOCK,
    QUARTZ_BRICKS,
    QUARTZ_PILLAR(2, "QUARTZ_BLOCK"),
    QUARTZ_SLAB(7, "STEP"),
    QUARTZ_STAIRS,
    RABBIT,
    RABBIT_FOOT,
    RABBIT_HIDE,
    RABBIT_SPAWN_EGG(101, "MONSTER_EGG"),
    RABBIT_STEW,
    RAIL("RAILS"),
    RAVAGER_SPAWN_EGG,
    RAW_COPPER,
    RAW_COPPER_BLOCK,
    RAW_GOLD,
    RAW_GOLD_BLOCK,
    RAW_IRON,
    RAW_IRON_BLOCK,
    RAW_FISH("COD"),
    RED_BANNER(1, "BANNER"),
    RED_BED(14, "BED"),
    RED_CANDLE,
    RED_CANDLE_CAKE,
    RED_CARPET(14, "CARPET"),
    RED_CONCRETE(14, "CONCRETE"),
    RED_CONCRETE_POWDER(14, "CONCRETE_POWDER"),
    RED_DYE(1, "INK_SACK", "RED_ROSE", "ROSE_RED"),
    RED_GLAZED_TERRACOTTA,
    RED_LEATHER_BOOTS("LEATHER_BOOTS", 14, Color.fromRGB(153, 51, 51)),
    RED_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 14, Color.fromRGB(153, 51, 51)),
    RED_LEATHER_HELMET("LEATHER_HELMET", 14, Color.fromRGB(153, 51, 51)),
    RED_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 14, Color.fromRGB(153, 51, 51)),
    RED_MUSHROOM,
    RED_MUSHROOM_BLOCK(14, "HUGE_MUSHROOM_2"),
    RED_NETHER_BRICK_SLAB,
    RED_NETHER_BRICK_STAIRS,
    RED_NETHER_BRICK_WALL,
    RED_NETHER_BRICKS("RED_NETHER_BRICK"),
    RED_SAND(1, "SAND"),
    RED_SANDSTONE,
    RED_SANDSTONE_SLAB("STONE_SLAB2"),
    RED_SANDSTONE_STAIRS,
    RED_SANDSTONE_WALL,
    RED_SHULKER_BOX,
    RED_STAINED_GLASS(14, "STAINED_GLASS"),
    RED_STAINED_GLASS_PANE(14, "STAINED_GLASS_PANE"),
    RED_TERRACOTTA(14, "STAINED_CLAY"),
    RED_TULIP(4, "RED_ROSE"),
    RED_WALL_BANNER(1, "BANNER"),
    RED_WOOL(14, "WOOL"),
    REDSTONE,
    REDSTONE_BLOCK,
    REDSTONE_LAMP("REDSTONE_LAMP_OFF"),
    REDSTONE_LAMP_ON("REDSTONE_LAMP"),
    REDSTONE_ORE,
    REDSTONE_TORCH("REDSTONE_TORCH_OFF"),
    REDSTONE_TORCH_ON("REDSTONE_TORCH"),
    REDSTONE_WALL_TORCH("REDSTONE_TORCH_OFF"),
    REDSTONE_WIRE,
    REPEATER("DIODE"),
    REPEATING_COMMAND_BLOCK("COMMAND", "COMMAND_REPEATING"),
    RESPAWN_ANCHOR,
    ROOTED_DIRT,
    ROSE_BUSH(4, "DOUBLE_PLANT"),
    ROTTEN_FLESH,
    SADDLE,
    SALMON(1, "RAW_FISH"),
    SALMON_BUCKET,
    SALMON_SPAWN_EGG,
    SAND,
    SANDSTONE,
    SANDSTONE_SLAB(1, "STEP"),
    SANDSTONE_STAIRS,
    SANDSTONE_WALL,
    SCAFFOLDING,
    SCULK_SENSOR,
    SCUTE,
    SEA_LANTERN,
    SEA_PICKLE,
    SEAGRASS,
    SHEARS,
    SHEEP_SPAWN_EGG(91, "MONSTER_EGG"),
    SHIELD,
    SHROOMLIGHT,
    SHULKER_BOX,
    SHULKER_SHELL,
    SHULKER_SPAWN_EGG(69, "MONSTER_EGG"),
    SILVERFISH_SPAWN_EGG(60, "MONSTER_EGG"),
    SKELETON_HORSE_SPAWN_EGG,
    SKELETON_SKULL("SKULL"),
    SKELETON_SKULL_ITEM("SKULL_ITEM", "SKELETON_SKULL"),
    SKELETON_SPAWN_EGG(51, "MONSTER_EGG"),
    SKELETON_WALL_SKULL("SKULL"),
    SKULL_BANNER_PATTERN,
    SLIME_BALL,
    SLIME_BLOCK,
    SLIME_SPAWN_EGG(55, "MONSTER_EGG"),
    SMALL_AMETHYST_BUD,
    SMALL_DRIPLEAF,
    SMITHING_TABLE,
    SMOKER,
    SMOOTH_BASALT,
    SMOOTH_QUARTZ,
    SMOOTH_QUARTZ_SLAB,
    SMOOTH_QUARTZ_STAIRS,
    SMOOTH_RED_SANDSTONE(8, "DOUBLE_STONE_SLAB2"),
    SMOOTH_RED_SANDSTONE_SLAB,
    SMOOTH_RED_SANDSTONE_STAIRS,
    SMOOTH_SANDSTONE(9, "DOUBLE_STEP"),
    SMOOTH_SANDSTONE_SLAB,
    SMOOTH_SANDSTONE_STAIRS,
    SMOOTH_STONE(8, "DOUBLE_STEP"),
    SMOOTH_STONE_SLAB,
    SNOW,
    SNOW_BLOCK,
    SNOWBALL("SNOW_BALL"),
    SOUL_CAMPFIRE,
    SOUL_FIRE,
    SOUL_LANTERN,
    SOUL_SAND,
    SOUL_SOIL,
    SOUL_TORCH,
    SOUL_WALL_TORCH,
    SPAWN_EGG("MONSTER_EGG"),
    SPAWNER("MOB_SPAWNER"),
    SPECTRAL_ARROW("ARROW"),
    SPIDER_EYE,
    SPIDER_SPAWN_EGG(52, "MONSTER_EGG"),
    SPLASH_POTION,
    SPLASH_POTION_AWKWARD(PotionBase.SPLASH, "AWKWARD", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_FIRE_RESISTANCE(PotionBase.SPLASH, "FIRE_RESISTANCE", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_FIRE_RESISTANCE_EXTENDED(PotionBase.SPLASH, "FIRE_RESISTANCE", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_HARMING_1(PotionBase.SPLASH, "INSTANT_DAMAGE", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_HARMING_2(PotionBase.SPLASH, "INSTANT_DAMAGE", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_HEALING_1(PotionBase.SPLASH, "INSTANT_HEAL", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_HEALING_2(PotionBase.SPLASH, "INSTANT_HEAL", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_INVISIBILITY(PotionBase.SPLASH, "INVISIBILITY", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_INVISIBILITY_EXTENDED(PotionBase.SPLASH, "INVISIBILITY", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_LEAPING_1(PotionBase.SPLASH, "JUMP", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_LEAPING_1_EXTENDED(PotionBase.SPLASH, "JUMP", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_LEAPING_2(PotionBase.SPLASH, "JUMP", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_LUCK(PotionBase.SPLASH, "LUCK", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_MUNDANE(PotionBase.SPLASH, "MUNDANE", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_NIGHT_VISION(PotionBase.SPLASH, "NIGHT_VISION", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_NIGHT_VISION_EXTENDED(PotionBase.SPLASH, "NIGHT_VISION", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_POISON_1(PotionBase.SPLASH, "POISON", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_POISON_1_EXTENDED(PotionBase.SPLASH, "POISON", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_POISON_2(PotionBase.SPLASH, "POISON", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_REGENERATION_1(PotionBase.SPLASH, "REGEN", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_REGENERATION_1_EXTENDED(PotionBase.SPLASH, "REGEN", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_REGENERATION_2(PotionBase.SPLASH, "REGEN", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SLOW_FALLING(PotionBase.SPLASH, "SLOW_FALLING", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SLOW_FALLING_EXTENDED(PotionBase.SPLASH, "SLOW_FALLING", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SLOWNESS_1(PotionBase.SPLASH, "SLOWNESS", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SLOWNESS_1_EXTENDED(PotionBase.SPLASH, "SLOWNESS", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SLOWNESS_2(PotionBase.SPLASH, "SLOWNESS", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_STRENGTH_1(PotionBase.SPLASH, "STRENGTH", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_STRENGTH_1_EXTENDED(PotionBase.SPLASH, "STRENGTH", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_STRENGTH_2(PotionBase.SPLASH, "STRENGTH", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SWIFTNESS_1(PotionBase.SPLASH, "SPEED", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SWIFTNESS_1_EXTENDED(PotionBase.SPLASH, "SPEED", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_SWIFTNESS_2(PotionBase.SPLASH, "SPEED", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_THICK(PotionBase.SPLASH, "THICK", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_TURTLE_MASTER_1(PotionBase.SPLASH, "TURTLE_MASTER", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_TURTLE_MASTER_1_EXTENDED(PotionBase.SPLASH, "TURTLE_MASTER", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_TURTLE_MASTER_2(PotionBase.SPLASH, "TURTLE_MASTER", false, true, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_WATER(PotionBase.SPLASH, "WATER", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_WATER_BREATHING(PotionBase.SPLASH, "WATER_BREATHING", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_WATER_BREATHING_EXTENDED(PotionBase.SPLASH, "WATER_BREATHING", true, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_WEAKNESS(PotionBase.SPLASH, "WEAKNESS", false, false, "POTION", "SPLASH_POTION"),
    SPLASH_POTION_WEAKNESS_EXTENDED(PotionBase.SPLASH, "WEAKNESS", true, false, "POTION", "SPLASH_POTION"),
    SPONGE,
    SPORE_BLOSSOM,
    SPRUCE_BOAT("BOAT", "BOAT_SPRUCE"),
    SPRUCE_BUTTON("WOOD_BUTTON"),
    SPRUCE_DOOR,
    SPRUCE_DOOR_ITEM("SPRUCE_DOOR_ITEM", "SPRUCE_DOOR"),
    SPRUCE_FENCE,
    SPRUCE_FENCE_GATE,
    SPRUCE_LEAVES(1, "LEAVES"),
    SPRUCE_LOG(1, "LOG"),
    SPRUCE_PLANKS(1, "WOOD"),
    SPRUCE_PRESSURE_PLATE("WOOD_PLATE"),
    SPRUCE_SAPLING(1, "SAPLING"),
    SPRUCE_SIGN("SIGN"),
    SPRUCE_SLAB(1, "WOOD_STEP"),
    SPRUCE_STAIRS("SPRUCE_WOOD_STAIRS"),
    SPRUCE_TRAPDOOR("TRAP_DOOR"),
    SPRUCE_WALL_SIGN("WALL_SIGN"),
    SPRUCE_WOOD(13, "LOG"),
    SPYGLASS,
    SQUID_SPAWN_EGG(94, "MONSTER_EGG"),
    STICK,
    STICKY_PISTON("PISTON_STICKY_BASE"),
    STONE,
    STONE_AXE,
    STONE_BRICK_SLAB(5, "STEP"),
    STONE_BRICK_STAIRS("SMOOTH_STAIRS"),
    STONE_BRICK_WALL,
    STONE_BRICKS("SMOOTH_BRICK"),
    STONE_BUTTON,
    STONE_HOE,
    STONE_PICKAXE,
    STONE_PRESSURE_PLATE("STONE_PLATE"),
    STONE_SHOVEL("STONE_SPADE"),
    STONE_SLAB("STEP"),
    STONE_STAIRS,
    STONE_SWORD,
    STONECUTTER,
    STRAY_SPAWN_EGG("MONSTER_EGG"),
    STRIDER_SPAWN_EGG,
    STRING,
    STRIPPED_ACACIA_LOG,
    STRIPPED_ACACIA_WOOD,
    STRIPPED_BIRCH_LOG,
    STRIPPED_BIRCH_WOOD,
    STRIPPED_CRIMSON_HYPHAE,
    STRIPPED_CRIMSON_STEM,
    STRIPPED_DARK_OAK_LOG,
    STRIPPED_DARK_OAK_WOOD,
    STRIPPED_JUNGLE_LOG,
    STRIPPED_JUNGLE_WOOD,
    STRIPPED_OAK_LOG,
    STRIPPED_OAK_WOOD,
    STRIPPED_SPRUCE_LOG,
    STRIPPED_SPRUCE_WOOD,
    STRIPPED_WARPED_HYPHAE,
    STRIPPED_WARPED_STEM,
    STRUCTURE_BLOCK,
    STRUCTURE_VOID,
    SUGAR,
    SUGAR_CANE,
    SUNFLOWER("DOUBLE_PLANT"),
    SUSPICIOUS_STEW,
    SWEET_BERRIES,
    SWEET_BERRY_BUSH,
    TALL_GRASS(1, "LONG_GRASS", "TALL_GRASS"),
    TALL_GRASS_BOTTOM(2, "DOUBLE_PLANT", "TALL_GRASS"),
    TALL_GRASS_TOP(2, "DOUBLE_PLANT", "TALL_GRASS"),
    TALL_SEAGRASS,
    TARGET,
    TERRACOTTA("HARD_CLAY"),
    TINTED_GLASS,
    TIPPED_ARROW("ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_FIRE_RESISTANCE(PotionBase.TIPPED_ARROW, "FIRE_RESISTANCE", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_FIRE_RESISTANCE_EXTENDED(PotionBase.TIPPED_ARROW, "FIRE_RESISTANCE", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_HARMING_1(PotionBase.TIPPED_ARROW, "INSTANT_DAMAGE", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_HARMING_2(PotionBase.TIPPED_ARROW, "INSTANT_DAMAGE", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_HEALING_1(PotionBase.TIPPED_ARROW, "INSTANT_HEAL", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_HEALING_2(PotionBase.TIPPED_ARROW, "INSTANT_HEAL", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_INVISIBILITY(PotionBase.TIPPED_ARROW, "INVISIBILITY", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_INVISIBILITY_EXTENDED(PotionBase.TIPPED_ARROW, "INVISIBILITY", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_LEAPING_1(PotionBase.TIPPED_ARROW, "JUMP", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_LEAPING_1_EXTENDED(PotionBase.TIPPED_ARROW, "JUMP", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_LEAPING_2(PotionBase.TIPPED_ARROW, "JUMP", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_LUCK(PotionBase.TIPPED_ARROW, "LUCK", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_NIGHT_VISION(PotionBase.TIPPED_ARROW, "NIGHT_VISION", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_NIGHT_VISION_EXTENDED(PotionBase.TIPPED_ARROW, "NIGHT_VISION", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_POISON_1(PotionBase.TIPPED_ARROW, "POISON", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_POISON_1_EXTENDED(PotionBase.TIPPED_ARROW, "POISON", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_POISON_2(PotionBase.TIPPED_ARROW, "POISON", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_REGENERATION_1(PotionBase.TIPPED_ARROW, "REGEN", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_REGENERATION_1_EXTENDED(PotionBase.TIPPED_ARROW, "REGEN", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_REGENERATION_2(PotionBase.TIPPED_ARROW, "REGEN", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SLOW_FALLING(PotionBase.TIPPED_ARROW, "SLOW_FALLING", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SLOW_FALLING_EXTENDED(PotionBase.TIPPED_ARROW, "SLOW_FALLING", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SLOWNESS_1(PotionBase.TIPPED_ARROW, "SLOWNESS", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SLOWNESS_1_EXTENDED(PotionBase.TIPPED_ARROW, "SLOWNESS", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SLOWNESS_2(PotionBase.TIPPED_ARROW, "SLOWNESS", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_STRENGTH_1(PotionBase.TIPPED_ARROW, "STRENGTH", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_STRENGTH_1_EXTENDED(PotionBase.TIPPED_ARROW, "STRENGTH", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_STRENGTH_2(PotionBase.TIPPED_ARROW, "STRENGTH", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SWIFTNESS_1(PotionBase.TIPPED_ARROW, "SPEED", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SWIFTNESS_1_EXTENDED(PotionBase.TIPPED_ARROW, "SPEED", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_SWIFTNESS_2(PotionBase.TIPPED_ARROW, "SPEED", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_TURTLE_MASTER_1(PotionBase.TIPPED_ARROW, "TURTLE_MASTER", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_TURTLE_MASTER_1_EXTENDED(PotionBase.TIPPED_ARROW, "TURTLE_MASTER", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_TURTLE_MASTER_2(PotionBase.TIPPED_ARROW, "TURTLE_MASTER", false, true, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_WATER_BREATHING(PotionBase.TIPPED_ARROW, "WATER_BREATHING", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_WATER_BREATHING_EXTENDED(PotionBase.TIPPED_ARROW, "WATER_BREATHING", true, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_WEAKNESS(PotionBase.TIPPED_ARROW, "WEAKNESS", false, false, "ARROW", "TIPPED_ARROW"),
    TIPPED_ARROW_WEAKNESS_EXTENDED(PotionBase.TIPPED_ARROW, "WEAKNESS", true, false, "ARROW", "TIPPED_ARROW"),
    TNT,
    TNT_MINECART("EXPLOSIVE_MINECART"),
    TORCH,
    TOTEM_OF_UNDYING("TOTEM"),
    TRADER_LLAMA_SPAWN_EGG,
    TRAPPED_CHEST,
    TRIDENT,
    TRIPWIRE,
    TRIPWIRE_HOOK,
    TROPICAL_FISH,
    TROPICAL_FISH_BUCKET,
    TROPICAL_FISH_SPAWN_EGG,
    TUBE_CORAL,
    TUBE_CORAL_BLOCK,
    TUBE_CORAL_FAN,
    TUBE_CORAL_WALL_FAN,
    TUFF,
    TURTLE_EGG,
    TURTLE_HELMET,
    TURTLE_SPAWN_EGG,
    TWISTING_VINES,
    TWISTING_VINES_PLANT,
    VEX_SPAWN_EGG(35, "MONSTER_EGG"),
    VILLAGER_SPAWN_EGG(120, "MONSTER_EGG"),
    VINDICATOR_SPAWN_EGG(36, "MONSTER_EGG"),
    VINE,
    VOID_AIR("AIR"),
    WALL_TORCH,
    WANDERING_TRADER_SPAWN_EGG,
    WARPED_BUTTON,
    WARPED_DOOR,
    WARPED_FENCE,
    WARPED_FENCE_GATE,
    WARPED_FUNGUS,
    WARPED_FUNGUS_ON_A_STICK,
    WARPED_HYPHAE,
    WARPED_NYLIUM,
    WARPED_PLANKS,
    WARPED_PRESSURE_PLATE,
    WARPED_ROOTS,
    WARPED_SIGN,
    WARPED_SLAB,
    WARPED_STAIRS,
    WARPED_STEM,
    WARPED_TRAPDOOR,
    WARPED_WALL_SIGN,
    WARPED_WART_BLOCK,
    WATER,
    WATER_BUCKET,
    WEEPING_VINES,
    WEEPING_VINES_PLANT,
    WET_SPONGE(1, "SPONGE"),
    WHEAT,
    WHEAT_SEEDS("SEEDS"),
    WHITE_BANNER(15, "BANNER"),
    WHITE_BED("BED"),
    WHITE_CANDLE,
    WHITE_CANDLE_CAKE,
    WHITE_CARPET("CARPET"),
    WHITE_CONCRETE("CONCRETE"),
    WHITE_CONCRETE_POWDER("CONCRETE_POWDER"),
    WHITE_DYE,
    WHITE_GLAZED_TERRACOTTA("WHITE_GLAZED_TERRACOTTA"),
    WHITE_LEATHER_BOOTS("LEATHER_BOOTS", 0, Color.fromRGB(255, 255, 255)),
    WHITE_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 0, Color.fromRGB(255, 255, 255)),
    WHITE_LEATHER_HELMET("LEATHER_HELMET", 0, Color.fromRGB(255, 255, 255)),
    WHITE_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 0, Color.fromRGB(255, 255, 255)),
    WHITE_SHULKER_BOX,
    WHITE_STAINED_GLASS("STAINED_GLASS"),
    WHITE_STAINED_GLASS_PANE("STAINED_GLASS_PANE"),
    WHITE_TERRACOTTA("STAINED_CLAY"),
    WHITE_TULIP(6, "RED_ROSE"),
    WHITE_WALL_BANNER("BANNER"),
    WHITE_WOOL("WOOL"),
    WITCH_SPAWN_EGG(66, "MONSTER_EGG"),
    WITHER_ROSE,
    WITHER_SKELETON_SKULL(1, "SKULL"),
    WITHER_SKELETON_SKULL_ITEM(1, "SKULL_ITEM", "WITHER_SKELETON_SKULL"),
    WITHER_SKELETON_SPAWN_EGG,
    WITHER_SKELETON_WALL_SKULL(1, "SKULL"),
    WOLF_SPAWN_EGG(95, "MONSTER_EGG"),
    WOODEN_AXE("WOOD_AXE"),
    WOODEN_HOE("WOOD_HOE"),
    WOODEN_PICKAXE("WOOD_PICKAXE"),
    WOODEN_SHOVEL("WOOD_SPADE"),
    WOODEN_SWORD("WOOD_SWORD"),
    WRITABLE_BOOK("BOOK_AND_QUILL"),
    WRITTEN_BOOK,
    YELLOW_BANNER(11, "BANNER"),
    YELLOW_BED(4, "BED"),
    YELLOW_CANDLE,
    YELLOW_CANDLE_CAKE,
    YELLOW_CARPET(4, "CARPET"),
    YELLOW_CONCRETE(4, "CONCRETE"),
    YELLOW_CONCRETE_POWDER(4, "CONCRETE_POWDER"),
    YELLOW_DYE(11, "INK_SACK", "DANDELION_YELLOW"),
    YELLOW_GLAZED_TERRACOTTA,
    YELLOW_LEATHER_BOOTS("LEATHER_BOOTS", 4, Color.fromRGB(229, 229, 51)),
    YELLOW_LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 4, Color.fromRGB(229, 229, 51)),
    YELLOW_LEATHER_HELMET("LEATHER_HELMET", 4, Color.fromRGB(229, 229, 51)),
    YELLOW_LEATHER_LEGGINGS("LEATHER_LEGGINGS", 4, Color.fromRGB(229, 229, 51)),
    YELLOW_SHULKER_BOX,
    YELLOW_STAINED_GLASS(4, "STAINED_GLASS"),
    YELLOW_STAINED_GLASS_PANE(4, "STAINED_GLASS_PANE"),
    YELLOW_TERRACOTTA(4, "STAINED_CLAY"),
    YELLOW_WALL_BANNER(11, "BANNER"),
    YELLOW_WOOL(4, "WOOL"),
    ZOGLIN_SPAWN_EGG,
    ZOMBIE_HEAD(2, "SKULL"),
    ZOMBIE_HEAD_ITEM(2, "SKULL_ITEM", "ZOMBIE_HEAD"),
    ZOMBIE_HORSE_SPAWN_EGG("ZOMBIE_HORSE_SPAWN_EGG"),
    ZOMBIE_PIGMAN_SPAWN_EGG(57, "MONSTER_EGG"),
    ZOMBIE_SPAWN_EGG(54, "MONSTER_EGG"),
    ZOMBIE_VILLAGER_SPAWN_EGG("ZOMBIE_VILLAGER_SPAWN_EGG"),
    ZOMBIE_WALL_HEAD(2, "SKULL");

    private static final HashMap<String, UMaterial> CACHED_UMATERIALS = new HashMap<>();
    private String[] names;
    private Material material;
    private String attributes;
    private byte data;

    UMaterial() { this.setValues(0, null); }

    UMaterial(String...names) { this.setValues(0, null, names); }

    UMaterial(int data, String...names) { this.setValues(data, null, names); }

    UMaterial(String name, int spoofedData, Color color) {
        this.setValues(spoofedData, "color=" + color.getRed() + ":" + color.getGreen() + ":" + color.getBlue(), name);
    }
    UMaterial(PotionBase base, String type, boolean extended, boolean upgraded, String...names) {
        this.setValues(0, "upotion=" + base.name() + ":" + type + ":" + extended + ":" + upgraded, names);
    }
    UMaterial(String name, Enchantment enchant, int level) {
        this.setValues(0, enchant != null ? "enchant=" + enchant.getName() + ":" + level : null, name);
    }

    private void setValues(int data, String attributes, String...names) {
        this.data = (byte) data;
        this.attributes = attributes;
        this.names = names;
    }

    public Material getMaterial() {
        if (material == null)
            material = setupMaterial();
        return material;
    }

    private Material setupMaterial() {

        Material material = null;

        if (names == null || (material = Material.getMaterial(name())) != null)
            return material != null ? material : Material.getMaterial(name());

        final int nameLength = names.length;

        for(int i = nameLength-1; i >= 0; i--)
            if ((material = Material.getMaterial(names[i])) != null)
                return material;

        return null;
    }

    public ItemStack getItemStack() {

        final Material material = getMaterial();

        ItemStack item = material != null ? EIGHT || NINE || TEN || ELEVEN || TWELVE ? new ItemStack(material, 1, data) : new ItemStack(material) : null;

        if (item != null && attributes != null) {

            for(String attribute : attributes.split(";")) {

                final String[] attributeValues = attribute.split("="), values = attributeValues[1].split(":");

                switch (attributeValues[0]) {
                    case "color":
                        final LeatherArmorMeta leatherMeta = (LeatherArmorMeta) item.getItemMeta();
                        leatherMeta.setColor(Color.fromRGB(Integer.parseInt(values[0]), Integer.parseInt(values[1]), Integer.parseInt(values[2])));
                        item.setItemMeta(leatherMeta);
                        break;
                    case "enchant":
                        final EnchantmentStorageMeta enchantMeta = (EnchantmentStorageMeta) item.getItemMeta();
                        enchantMeta.addStoredEnchant(Enchantment.getByName(values[0]), Integer.parseInt(values[1]), true);
                        item.setItemMeta(enchantMeta);
                        break;
                    case "upotion":
                        item = new UPotion(PotionBase.valueOf(values[0]), values[1], Boolean.parseBoolean(values[2]), Boolean.parseBoolean(values[3])).getItemStack();
                        break;
                    default:
                        break;
                }
            }
        }
        return item;
    }

    @Deprecated
    public byte getData() { return data; }

    public static ItemStack getEnchantmentBook(Enchantment enchant, int level, int amount) {
        final LinkedHashMap<Enchantment, Integer> enchants = new LinkedHashMap<Enchantment, Integer>() {{ put(enchant, level); }};
        return getEnchantmentBook(enchants, amount);
    }

    public static ItemStack getEnchantmentBook(LinkedHashMap<Enchantment, Integer> enchants, int amount) {

        final ItemStack item = new ItemStack(Material.ENCHANTED_BOOK, amount);
        final EnchantmentStorageMeta meta = (EnchantmentStorageMeta) item.getItemMeta();

        for(Map.Entry<Enchantment, Integer> enchantMap : enchants.entrySet()) {
            final Enchantment enchant = enchantMap.getKey();
            final int level = enchantMap.getValue();
            meta.addStoredEnchant(enchant, level, true);
        }
        item.setItemMeta(meta);
        return item;
    }
    public static ItemStack getColoredLeather(Material material, int amount, int red, int green, int blue) {
        final ItemStack item = new ItemStack(material, amount);
        final LeatherArmorMeta meta = (LeatherArmorMeta) item.getItemMeta();
        meta.setColor(Color.fromRGB(red, green, blue));
        item.setItemMeta(meta);
        return item;
    }

    @Deprecated
    public static UMaterial match(String name, byte data) {

        name = name.toUpperCase();
        final String targetUMaterial = name + data;
        if (CACHED_UMATERIALS.containsKey(targetUMaterial))
            return CACHED_UMATERIALS.get(targetUMaterial);

        for(UMaterial umaterial : values()) {
            if (umaterial.getData() == data) {
                for(String umaterialName : umaterial.names) {
                    if (name.equals(umaterialName)) {
                        CACHED_UMATERIALS.put(targetUMaterial, umaterial);
                        return umaterial;
                    }
                }
            }
        }
        return null;
    }

    public static UMaterial matchSpawnEgg(ItemStack egg) {
        if (egg != null) {

            if (EIGHT) {

                return match("MONSTER_EGG", egg.getData().getData());

            } else if (NINE || TEN || ELEVEN || TWELVE) {

                final String id = egg.hasItemMeta() ? egg.getItemMeta().toString().split("id=")[1].split("}")[0].toUpperCase() : "PIG";
                return match(id + "_SPAWN_EGG");

            } else { return match(egg.getType().name()); }
        }
        return null;
    }

    public static UMaterial matchEnchantedBook(ItemStack book) {
        if (book != null && book.getItemMeta() instanceof EnchantmentStorageMeta) {
            final EnchantmentStorageMeta meta = (EnchantmentStorageMeta) book.getItemMeta();
            final Map<Enchantment, Integer> enchants = meta.getStoredEnchants();
            if (enchants.size() == 1) {
                final Enchantment enchant = (Enchantment) enchants.keySet().toArray()[0];
                final int level = enchants.get(enchant);
                final String name = toVanillaEnchantName(enchant);
                return match("ENCHANTED_BOOK_" + (enchant.getMaxLevel() != 1 ? name + "_" + level : name));
            }
        }
        return null;
    }
    private static String toVanillaEnchantName(Enchantment enchant) {

        final String name = enchant.getName();
        switch (name) {
            case "PROTECTION_ENVIRONMENTAL": return "PROTECTION";
            case "PROTECTION_FIRE": return "FIRE_PROTECTION";
            case "PROTECTION_FALL": return "FEATHER_FALLING";
            case "PROTECTION_EXPLOSIONS": return "BLAST_PROTECTION";
            case "PROTECTION_PROJECTILE": return "PROJECTILE_PROTECTION";
            case "OXYGEN": return "AQUA_AFFINITY";
            case "WATER_WORKER": return "RESPIRATION";
            case "DAMAGE_ALL": return "SHARPNESS";
            case "DAMAGE_UNDEAD": return "SMITE";
            case "DAMAGE_ARTHROPODS": return "BANE_OF_ARTHROPODS";
            case "LOOT_BONUS_MOBS": return "LOOTING";
            case "SWEEPING_EDGE": return "SWEEPING";
            case "DIG_SPEED": return "EFFICIENCY";
            case "DURABILITY": return "UNBREAKING";
            case "LOOT_BONUS_BLOCKS": return "FORTUNE";
            case "ARROW_DAMAGE": return "POWER";
            case "ARROW_KNOCKBACK": return "PUNCH";
            case "ARROW_FIRE": return "FLAME";
            case "ARROW_INFINITE": return "INFINITY";
            case "LUCK": return "LUCK_OF_THE_SEA";
            default: return name;
        }
    }

    public static UMaterial matchPotion(ItemStack potion) {
        if (potion != null && potion.getItemMeta() instanceof PotionMeta) {
            final PotionMeta meta = (PotionMeta) potion.getItemMeta();
            final List<PotionEffect> customEffects = meta.getCustomEffects();
            if (customEffects.size() == 0) {
                final String base;
                final PotionEffectType potionEffect;
                final int level, max;
                final boolean isExtended;
                if (EIGHT) {
                    final Potion realPotion = Potion.fromItemStack(potion);
                    base = realPotion.isSplash() ? "SPLASH_POTION_" : "POTION_";
                    final Collection<PotionEffect> effects = realPotion.getEffects();
                    potionEffect = effects.size() > 0 ? ((PotionEffect) effects.toArray()[0]).getType() : null;
                    level = realPotion.getLevel();
                    final PotionType potionType = realPotion.getType();
                    max = potionType.getMaxLevel();
                    isExtended = realPotion.hasExtendedDuration();
                } else {
                    final org.bukkit.potion.PotionData potionData = meta.getBasePotionData();
                    final PotionType type = potionData.getType();
                    base = potion.getType().name() + "_";
                    potionEffect = type.getEffectType();
                    level = type.isUpgradeable() && potionData.isUpgraded() ? 2 : 1;
                    max = type.getMaxLevel();
                    isExtended = type.isExtendable() && potionData.isExtended();
                }
                final String type = toVanillaPotionEffectName(potionEffect);
                if (type != null) {
                    final String materialName = base + type + (max != 1 && level <= max ? "_" + level : "") + (isExtended ? "_EXTENDED" : "");
                    return valueOf(materialName);
                } else {
                    return UMaterial.POTION;
                }
            }
        }
        return null;
    }

    private static String toVanillaPotionEffectName(PotionEffectType effect) {
        if (effect != null) {
            final String name = effect.getName();
            switch (name) {
                case "SPEED": return "SWIFTNESS";
                case "SLOW": return "SLOWNESS";
                case "INCREASE_DAMAGE": return "STRENGTH";
                case "HEAL": return "HEALING";
                case "HARM": return "HARMING";
                case "JUMP": return "LEAPING";
                default: return name;
            }
        }
        return null;
    }

    private static UMaterial tryMatchingCustom(ItemStack item, String targetMaterial) {
        return targetMaterial.contains("SPAWN_EGG") ? matchSpawnEgg(item) : targetMaterial.contains("ENCHANTED_BOOK") ? matchEnchantedBook(item) : targetMaterial.contains("POTION") ? matchPotion(item) : match(targetMaterial);
    }

    public static UMaterial match(String name) {
        name = name.toUpperCase();
        try {
            final UMaterial material = valueOf(name);
            CACHED_UMATERIALS.putIfAbsent(name, material);
            return material;
        } catch (final Exception e) {
            final String[] materialValues = name.split(":");
            final byte targetData = name.contains(":") ? Byte.parseByte(materialValues[1]) : 0;
            name = materialValues[0];
            final String targetUMaterial = name + targetData;
            if (CACHED_UMATERIALS.containsKey(targetUMaterial)) {
                return CACHED_UMATERIALS.get(targetUMaterial);
            }
            for(UMaterial umaterial : values()) {
                if (name.equals(umaterial.name())) {
                    CACHED_UMATERIALS.put(name, umaterial);
                    return umaterial;
                }
                final byte data = umaterial.getData();
                if (data == targetData) {
                    final String[] names = umaterial.names;
                    for(String umaterialName : names) {
                        if (name.equals(umaterialName)) {
                            CACHED_UMATERIALS.put(umaterialName, umaterial);
                            return umaterial;
                        }
                    }
                }
            }
        }
        return null;
    }

    public enum PotionBase {
        NORMAL,
        ARROW,
        TIPPED_ARROW,
        LINGERING,
        SPLASH,
    }
}

class UPotion implements Versionable {

    private final UMaterial.PotionBase base;
    private final ItemStack potion;
    private final PotionType type;
    private final Object potiondata;

    public UPotion(UMaterial.PotionBase base, String type, boolean extended, boolean upgraded) {

        this.base = base;
        type = type.toUpperCase();
        final PotionType potionType = EIGHT && (type.equals("AWKWARD") || type.equals("LUCK") || type.equals("MUNDANE") || type.equals("THICK")) || (EIGHT || NINE || TEN || ELEVEN || TWELVE) && (type.equals("TURTLE_MASTER") || type.equals("SLOW_FALLING"))
                ? PotionType.WATER : PotionType.valueOf(type);
        this.type = potionType;
        final String potionBaseName = base.name();
        if (EIGHT) {
            potion = potionType.equals(PotionType.WATER) ? new Potion(potionType).toItemStack(1) : new Potion(potionType, upgraded ? 2 : 1, potionBaseName.equals("SPLASH")).toItemStack(1);
            potiondata = potion.getItemMeta();
        } else {
            final ItemStack is = new ItemStack(Material.getMaterial(potionBaseName.equals("NORMAL") ? "POTION" : potionBaseName.contains("ARROW") ? potionBaseName.contains("TIPPED") ? "TIPPED_ARROW" : "ARROW" : potionBaseName + "_POTION"));
            final boolean isNotArrow = !is.getType().equals(Material.ARROW);
            PotionMeta pm = null;
            org.bukkit.potion.PotionData pd = null;
            if (isNotArrow) {
                pm = (PotionMeta) is.getItemMeta();
                pd = new org.bukkit.potion.PotionData(potionType, potionType.isExtendable() && extended, potionType.isUpgradeable() && upgraded);
            }
            potiondata = pd;
            if (isNotArrow) {
                pm.setBasePotionData(pd);
                is.setItemMeta(pm);
            }
            potion = is;
        }
    }

    public PotionType getType() { return this.type; }

    public ItemStack getItemStack() { return this.potion.clone(); }
}